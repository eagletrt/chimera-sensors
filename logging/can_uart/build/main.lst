ARM GAS  /tmp/cc1WLFWY.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB140:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** 
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** 
  32:Src/main.c    **** /* USER CODE END PTD */
ARM GAS  /tmp/cc1WLFWY.s 			page 2


  33:Src/main.c    **** 
  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PD */
  36:Src/main.c    **** /* USER CODE END PD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  39:Src/main.c    **** /* USER CODE BEGIN PM */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* USER CODE END PM */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  44:Src/main.c    **** CAN_HandleTypeDef hcan1;
  45:Src/main.c    **** 
  46:Src/main.c    **** SD_HandleTypeDef hsd;
  47:Src/main.c    **** DMA_HandleTypeDef hdma_sdio_rx;
  48:Src/main.c    **** DMA_HandleTypeDef hdma_sdio_tx;
  49:Src/main.c    **** 
  50:Src/main.c    **** TIM_HandleTypeDef htim6;
  51:Src/main.c    **** TIM_HandleTypeDef htim7;
  52:Src/main.c    **** 
  53:Src/main.c    **** UART_HandleTypeDef huart2;
  54:Src/main.c    **** UART_HandleTypeDef huart3;
  55:Src/main.c    **** 
  56:Src/main.c    **** /* USER CODE BEGIN PV */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE END PV */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  61:Src/main.c    **** void SystemClock_Config(void);
  62:Src/main.c    **** static void MX_GPIO_Init(void);
  63:Src/main.c    **** static void MX_DMA_Init(void);
  64:Src/main.c    **** static void MX_USART3_UART_Init(void);
  65:Src/main.c    **** static void MX_SDIO_SD_Init(void);
  66:Src/main.c    **** static void MX_USART2_UART_Init(void);
  67:Src/main.c    **** static void MX_CAN1_Init(void);
  68:Src/main.c    **** static void MX_TIM6_Init(void);
  69:Src/main.c    **** static void MX_TIM7_Init(void);
  70:Src/main.c    **** static void MX_NVIC_Init(void);
  71:Src/main.c    **** /* USER CODE BEGIN PFP */
  72:Src/main.c    **** 
  73:Src/main.c    **** /* USER CODE END PFP */
  74:Src/main.c    **** 
  75:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  76:Src/main.c    **** /* USER CODE BEGIN 0 */
  77:Src/main.c    **** 
  78:Src/main.c    **** /* USER CODE END 0 */
  79:Src/main.c    **** 
  80:Src/main.c    **** /**
  81:Src/main.c    ****   * @brief  The application entry point.
  82:Src/main.c    ****   * @retval int
  83:Src/main.c    ****   */
  84:Src/main.c    **** int main(void)
  85:Src/main.c    **** {
  86:Src/main.c    ****   /* USER CODE BEGIN 1 */
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* USER CODE END 1 */
  89:Src/main.c    ****   
ARM GAS  /tmp/cc1WLFWY.s 			page 3


  90:Src/main.c    **** 
  91:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  94:Src/main.c    ****   HAL_Init();
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* USER CODE BEGIN Init */
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* USER CODE END Init */
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* Configure the system clock */
 101:Src/main.c    ****   SystemClock_Config();
 102:Src/main.c    **** 
 103:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* USER CODE END SysInit */
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* Initialize all configured peripherals */
 108:Src/main.c    ****   MX_GPIO_Init();
 109:Src/main.c    ****   MX_DMA_Init();
 110:Src/main.c    ****   MX_USART3_UART_Init();
 111:Src/main.c    ****   MX_SDIO_SD_Init();
 112:Src/main.c    ****   MX_USART2_UART_Init();
 113:Src/main.c    ****   MX_CAN1_Init();
 114:Src/main.c    ****   MX_TIM6_Init();
 115:Src/main.c    ****   MX_TIM7_Init();
 116:Src/main.c    **** 
 117:Src/main.c    ****   /* Initialize interrupts */
 118:Src/main.c    ****   MX_NVIC_Init();
 119:Src/main.c    ****   /* USER CODE BEGIN 2 */
 120:Src/main.c    **** 
 121:Src/main.c    ****   /* USER CODE END 2 */
 122:Src/main.c    **** 
 123:Src/main.c    ****   /* Infinite loop */
 124:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 125:Src/main.c    ****   while (1)
 126:Src/main.c    ****   {
 127:Src/main.c    ****     /* USER CODE END WHILE */
 128:Src/main.c    **** 
 129:Src/main.c    ****     /* USER CODE BEGIN 3 */
 130:Src/main.c    ****   }
 131:Src/main.c    ****   /* USER CODE END 3 */
 132:Src/main.c    **** }
 133:Src/main.c    **** 
 134:Src/main.c    **** /**
 135:Src/main.c    ****   * @brief System Clock Configuration
 136:Src/main.c    ****   * @retval None
 137:Src/main.c    ****   */
 138:Src/main.c    **** void SystemClock_Config(void)
 139:Src/main.c    **** {
 140:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 141:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 142:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 143:Src/main.c    **** 
 144:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 145:Src/main.c    ****   */
 146:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
ARM GAS  /tmp/cc1WLFWY.s 			page 4


 147:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 148:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 149:Src/main.c    ****   */
 150:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 151:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 152:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 153:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 154:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 155:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 288;
 156:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 157:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 8;
 158:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = 2;
 159:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 160:Src/main.c    ****   {
 161:Src/main.c    ****     Error_Handler();
 162:Src/main.c    ****   }
 163:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 164:Src/main.c    ****   */
 165:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 166:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 167:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 168:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 169:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 170:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV4;
 171:Src/main.c    **** 
 172:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 173:Src/main.c    ****   {
 174:Src/main.c    ****     Error_Handler();
 175:Src/main.c    ****   }
 176:Src/main.c    ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SDIO|RCC_PERIPHCLK_CLK48;
 177:Src/main.c    ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48CLKSOURCE_PLLQ;
 178:Src/main.c    ****   PeriphClkInitStruct.SdioClockSelection = RCC_SDIOCLKSOURCE_CLK48;
 179:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 180:Src/main.c    ****   {
 181:Src/main.c    ****     Error_Handler();
 182:Src/main.c    ****   }
 183:Src/main.c    **** }
 184:Src/main.c    **** 
 185:Src/main.c    **** /**
 186:Src/main.c    ****   * @brief NVIC Configuration.
 187:Src/main.c    ****   * @retval None
 188:Src/main.c    ****   */
 189:Src/main.c    **** static void MX_NVIC_Init(void)
 190:Src/main.c    **** {
 191:Src/main.c    ****   /* CAN1_RX0_IRQn interrupt configuration */
 192:Src/main.c    ****   HAL_NVIC_SetPriority(CAN1_RX0_IRQn, 0, 0);
 193:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_RX0_IRQn);
 194:Src/main.c    ****   /* CAN1_RX1_IRQn interrupt configuration */
 195:Src/main.c    ****   HAL_NVIC_SetPriority(CAN1_RX1_IRQn, 0, 0);
 196:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_RX1_IRQn);
 197:Src/main.c    ****   /* CAN1_SCE_IRQn interrupt configuration */
 198:Src/main.c    ****   HAL_NVIC_SetPriority(CAN1_SCE_IRQn, 0, 0);
 199:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_SCE_IRQn);
 200:Src/main.c    ****   /* TIM6_DAC_IRQn interrupt configuration */
 201:Src/main.c    ****   HAL_NVIC_SetPriority(TIM6_DAC_IRQn, 0, 0);
 202:Src/main.c    ****   HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 203:Src/main.c    ****   /* TIM7_IRQn interrupt configuration */
ARM GAS  /tmp/cc1WLFWY.s 			page 5


 204:Src/main.c    ****   HAL_NVIC_SetPriority(TIM7_IRQn, 0, 0);
 205:Src/main.c    ****   HAL_NVIC_EnableIRQ(TIM7_IRQn);
 206:Src/main.c    **** }
 207:Src/main.c    **** 
 208:Src/main.c    **** /**
 209:Src/main.c    ****   * @brief CAN1 Initialization Function
 210:Src/main.c    ****   * @param None
 211:Src/main.c    ****   * @retval None
 212:Src/main.c    ****   */
 213:Src/main.c    **** static void MX_CAN1_Init(void)
 214:Src/main.c    **** {
 215:Src/main.c    **** 
 216:Src/main.c    ****   /* USER CODE BEGIN CAN1_Init 0 */
 217:Src/main.c    **** 
 218:Src/main.c    ****   /* USER CODE END CAN1_Init 0 */
 219:Src/main.c    **** 
 220:Src/main.c    ****   /* USER CODE BEGIN CAN1_Init 1 */
 221:Src/main.c    **** 
 222:Src/main.c    ****   /* USER CODE END CAN1_Init 1 */
 223:Src/main.c    ****   hcan1.Instance = CAN1;
 224:Src/main.c    ****   hcan1.Init.Prescaler = 2;
 225:Src/main.c    ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 226:Src/main.c    ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 227:Src/main.c    ****   hcan1.Init.TimeSeg1 = CAN_BS1_12TQ;
 228:Src/main.c    ****   hcan1.Init.TimeSeg2 = CAN_BS2_5TQ;
 229:Src/main.c    ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 230:Src/main.c    ****   hcan1.Init.AutoBusOff = DISABLE;
 231:Src/main.c    ****   hcan1.Init.AutoWakeUp = DISABLE;
 232:Src/main.c    ****   hcan1.Init.AutoRetransmission = DISABLE;
 233:Src/main.c    ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 234:Src/main.c    ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 235:Src/main.c    ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 236:Src/main.c    ****   {
 237:Src/main.c    ****     Error_Handler();
 238:Src/main.c    ****   }
 239:Src/main.c    ****   /* USER CODE BEGIN CAN1_Init 2 */
 240:Src/main.c    **** 
 241:Src/main.c    ****   /* USER CODE END CAN1_Init 2 */
 242:Src/main.c    **** 
 243:Src/main.c    **** }
 244:Src/main.c    **** 
 245:Src/main.c    **** /**
 246:Src/main.c    ****   * @brief SDIO Initialization Function
 247:Src/main.c    ****   * @param None
 248:Src/main.c    ****   * @retval None
 249:Src/main.c    ****   */
 250:Src/main.c    **** static void MX_SDIO_SD_Init(void)
 251:Src/main.c    **** {
 252:Src/main.c    **** 
 253:Src/main.c    ****   /* USER CODE BEGIN SDIO_Init 0 */
 254:Src/main.c    **** 
 255:Src/main.c    ****   /* USER CODE END SDIO_Init 0 */
 256:Src/main.c    **** 
 257:Src/main.c    ****   /* USER CODE BEGIN SDIO_Init 1 */
 258:Src/main.c    **** 
 259:Src/main.c    ****   /* USER CODE END SDIO_Init 1 */
 260:Src/main.c    ****   hsd.Instance = SDIO;
ARM GAS  /tmp/cc1WLFWY.s 			page 6


 261:Src/main.c    ****   hsd.Init.ClockEdge = SDIO_CLOCK_EDGE_RISING;
 262:Src/main.c    ****   hsd.Init.ClockBypass = SDIO_CLOCK_BYPASS_DISABLE;
 263:Src/main.c    ****   hsd.Init.ClockPowerSave = SDIO_CLOCK_POWER_SAVE_DISABLE;
 264:Src/main.c    ****   hsd.Init.BusWide = SDIO_BUS_WIDE_1B;
 265:Src/main.c    ****   hsd.Init.HardwareFlowControl = SDIO_HARDWARE_FLOW_CONTROL_DISABLE;
 266:Src/main.c    ****   hsd.Init.ClockDiv = 0;
 267:Src/main.c    ****   if (HAL_SD_Init(&hsd) != HAL_OK)
 268:Src/main.c    ****   {
 269:Src/main.c    ****     Error_Handler();
 270:Src/main.c    ****   }
 271:Src/main.c    ****   /* USER CODE BEGIN SDIO_Init 2 */
 272:Src/main.c    **** 
 273:Src/main.c    ****   /* USER CODE END SDIO_Init 2 */
 274:Src/main.c    **** 
 275:Src/main.c    **** }
 276:Src/main.c    **** 
 277:Src/main.c    **** /**
 278:Src/main.c    ****   * @brief TIM6 Initialization Function
 279:Src/main.c    ****   * @param None
 280:Src/main.c    ****   * @retval None
 281:Src/main.c    ****   */
 282:Src/main.c    **** static void MX_TIM6_Init(void)
 283:Src/main.c    **** {
 284:Src/main.c    **** 
 285:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 0 */
 286:Src/main.c    **** 
 287:Src/main.c    ****   /* USER CODE END TIM6_Init 0 */
 288:Src/main.c    **** 
 289:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 290:Src/main.c    **** 
 291:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 1 */
 292:Src/main.c    **** 
 293:Src/main.c    ****   /* USER CODE END TIM6_Init 1 */
 294:Src/main.c    ****   htim6.Instance = TIM6;
 295:Src/main.c    ****   htim6.Init.Prescaler = 72;
 296:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 297:Src/main.c    ****   htim6.Init.Period = 1000;
 298:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 299:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 300:Src/main.c    ****   {
 301:Src/main.c    ****     Error_Handler();
 302:Src/main.c    ****   }
 303:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 304:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 305:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 306:Src/main.c    ****   {
 307:Src/main.c    ****     Error_Handler();
 308:Src/main.c    ****   }
 309:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 2 */
 310:Src/main.c    **** 
 311:Src/main.c    ****   /* USER CODE END TIM6_Init 2 */
 312:Src/main.c    **** 
 313:Src/main.c    **** }
 314:Src/main.c    **** 
 315:Src/main.c    **** /**
 316:Src/main.c    ****   * @brief TIM7 Initialization Function
 317:Src/main.c    ****   * @param None
ARM GAS  /tmp/cc1WLFWY.s 			page 7


 318:Src/main.c    ****   * @retval None
 319:Src/main.c    ****   */
 320:Src/main.c    **** static void MX_TIM7_Init(void)
 321:Src/main.c    **** {
 322:Src/main.c    **** 
 323:Src/main.c    ****   /* USER CODE BEGIN TIM7_Init 0 */
 324:Src/main.c    **** 
 325:Src/main.c    ****   /* USER CODE END TIM7_Init 0 */
 326:Src/main.c    **** 
 327:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 328:Src/main.c    **** 
 329:Src/main.c    ****   /* USER CODE BEGIN TIM7_Init 1 */
 330:Src/main.c    **** 
 331:Src/main.c    ****   /* USER CODE END TIM7_Init 1 */
 332:Src/main.c    ****   htim7.Instance = TIM7;
 333:Src/main.c    ****   htim7.Init.Prescaler = 3600;
 334:Src/main.c    ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 335:Src/main.c    ****   htim7.Init.Period = 1999;
 336:Src/main.c    ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 337:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 338:Src/main.c    ****   {
 339:Src/main.c    ****     Error_Handler();
 340:Src/main.c    ****   }
 341:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 342:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 343:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 344:Src/main.c    ****   {
 345:Src/main.c    ****     Error_Handler();
 346:Src/main.c    ****   }
 347:Src/main.c    ****   /* USER CODE BEGIN TIM7_Init 2 */
 348:Src/main.c    **** 
 349:Src/main.c    ****   /* USER CODE END TIM7_Init 2 */
 350:Src/main.c    **** 
 351:Src/main.c    **** }
 352:Src/main.c    **** 
 353:Src/main.c    **** /**
 354:Src/main.c    ****   * @brief USART2 Initialization Function
 355:Src/main.c    ****   * @param None
 356:Src/main.c    ****   * @retval None
 357:Src/main.c    ****   */
 358:Src/main.c    **** static void MX_USART2_UART_Init(void)
 359:Src/main.c    **** {
 360:Src/main.c    **** 
 361:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
 362:Src/main.c    **** 
 363:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
 364:Src/main.c    **** 
 365:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
 366:Src/main.c    **** 
 367:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
 368:Src/main.c    ****   huart2.Instance = USART2;
 369:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 370:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 371:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 372:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 373:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 374:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
ARM GAS  /tmp/cc1WLFWY.s 			page 8


 375:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 376:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 377:Src/main.c    ****   {
 378:Src/main.c    ****     Error_Handler();
 379:Src/main.c    ****   }
 380:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
 381:Src/main.c    **** 
 382:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
 383:Src/main.c    **** 
 384:Src/main.c    **** }
 385:Src/main.c    **** 
 386:Src/main.c    **** /**
 387:Src/main.c    ****   * @brief USART3 Initialization Function
 388:Src/main.c    ****   * @param None
 389:Src/main.c    ****   * @retval None
 390:Src/main.c    ****   */
 391:Src/main.c    **** static void MX_USART3_UART_Init(void)
 392:Src/main.c    **** {
 393:Src/main.c    **** 
 394:Src/main.c    ****   /* USER CODE BEGIN USART3_Init 0 */
 395:Src/main.c    **** 
 396:Src/main.c    ****   /* USER CODE END USART3_Init 0 */
 397:Src/main.c    **** 
 398:Src/main.c    ****   /* USER CODE BEGIN USART3_Init 1 */
 399:Src/main.c    **** 
 400:Src/main.c    ****   /* USER CODE END USART3_Init 1 */
 401:Src/main.c    ****   huart3.Instance = USART3;
 402:Src/main.c    ****   huart3.Init.BaudRate = 115200;
 403:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 404:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 405:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 406:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 407:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 408:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 409:Src/main.c    ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 410:Src/main.c    ****   {
 411:Src/main.c    ****     Error_Handler();
 412:Src/main.c    ****   }
 413:Src/main.c    ****   /* USER CODE BEGIN USART3_Init 2 */
 414:Src/main.c    **** 
 415:Src/main.c    ****   /* USER CODE END USART3_Init 2 */
 416:Src/main.c    **** 
 417:Src/main.c    **** }
 418:Src/main.c    **** 
 419:Src/main.c    **** /** 
 420:Src/main.c    ****   * Enable DMA controller clock
 421:Src/main.c    ****   */
 422:Src/main.c    **** static void MX_DMA_Init(void) 
 423:Src/main.c    **** {
 424:Src/main.c    **** 
 425:Src/main.c    ****   /* DMA controller clock enable */
 426:Src/main.c    ****   __HAL_RCC_DMA2_CLK_ENABLE();
 427:Src/main.c    **** 
 428:Src/main.c    ****   /* DMA interrupt init */
 429:Src/main.c    ****   /* DMA2_Stream3_IRQn interrupt configuration */
 430:Src/main.c    ****   HAL_NVIC_SetPriority(DMA2_Stream3_IRQn, 0, 0);
 431:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA2_Stream3_IRQn);
ARM GAS  /tmp/cc1WLFWY.s 			page 9


 432:Src/main.c    ****   /* DMA2_Stream6_IRQn interrupt configuration */
 433:Src/main.c    ****   HAL_NVIC_SetPriority(DMA2_Stream6_IRQn, 0, 0);
 434:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA2_Stream6_IRQn);
 435:Src/main.c    **** 
 436:Src/main.c    **** }
 437:Src/main.c    **** 
 438:Src/main.c    **** /**
 439:Src/main.c    ****   * @brief GPIO Initialization Function
 440:Src/main.c    ****   * @param None
 441:Src/main.c    ****   * @retval None
 442:Src/main.c    ****   */
 443:Src/main.c    **** static void MX_GPIO_Init(void)
 444:Src/main.c    **** {
  27              		.loc 1 444 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 40
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 20
  34              		.cfi_offset 4, -20
  35              		.cfi_offset 5, -16
  36              		.cfi_offset 6, -12
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 8BB0     		sub	sp, sp, #44
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 64
 445:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 445 0
  43 0004 0024     		movs	r4, #0
  44 0006 0594     		str	r4, [sp, #20]
  45 0008 0694     		str	r4, [sp, #24]
  46 000a 0794     		str	r4, [sp, #28]
  47 000c 0894     		str	r4, [sp, #32]
  48 000e 0994     		str	r4, [sp, #36]
  49              	.LBB2:
 446:Src/main.c    **** 
 447:Src/main.c    ****   /* GPIO Ports Clock Enable */
 448:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  50              		.loc 1 448 0
  51 0010 0094     		str	r4, [sp]
  52 0012 294B     		ldr	r3, .L3
  53 0014 1A6B     		ldr	r2, [r3, #48]
  54 0016 42F08002 		orr	r2, r2, #128
  55 001a 1A63     		str	r2, [r3, #48]
  56 001c 1A6B     		ldr	r2, [r3, #48]
  57 001e 02F08002 		and	r2, r2, #128
  58 0022 0092     		str	r2, [sp]
  59 0024 009A     		ldr	r2, [sp]
  60              	.LBE2:
  61              	.LBB3:
 449:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  62              		.loc 1 449 0
  63 0026 0194     		str	r4, [sp, #4]
  64 0028 1A6B     		ldr	r2, [r3, #48]
  65 002a 42F00102 		orr	r2, r2, #1
ARM GAS  /tmp/cc1WLFWY.s 			page 10


  66 002e 1A63     		str	r2, [r3, #48]
  67 0030 1A6B     		ldr	r2, [r3, #48]
  68 0032 02F00102 		and	r2, r2, #1
  69 0036 0192     		str	r2, [sp, #4]
  70 0038 019A     		ldr	r2, [sp, #4]
  71              	.LBE3:
  72              	.LBB4:
 450:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  73              		.loc 1 450 0
  74 003a 0294     		str	r4, [sp, #8]
  75 003c 1A6B     		ldr	r2, [r3, #48]
  76 003e 42F00402 		orr	r2, r2, #4
  77 0042 1A63     		str	r2, [r3, #48]
  78 0044 1A6B     		ldr	r2, [r3, #48]
  79 0046 02F00402 		and	r2, r2, #4
  80 004a 0292     		str	r2, [sp, #8]
  81 004c 029A     		ldr	r2, [sp, #8]
  82              	.LBE4:
  83              	.LBB5:
 451:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  84              		.loc 1 451 0
  85 004e 0394     		str	r4, [sp, #12]
  86 0050 1A6B     		ldr	r2, [r3, #48]
  87 0052 42F00202 		orr	r2, r2, #2
  88 0056 1A63     		str	r2, [r3, #48]
  89 0058 1A6B     		ldr	r2, [r3, #48]
  90 005a 02F00202 		and	r2, r2, #2
  91 005e 0392     		str	r2, [sp, #12]
  92 0060 039A     		ldr	r2, [sp, #12]
  93              	.LBE5:
  94              	.LBB6:
 452:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  95              		.loc 1 452 0
  96 0062 0494     		str	r4, [sp, #16]
  97 0064 1A6B     		ldr	r2, [r3, #48]
  98 0066 42F00802 		orr	r2, r2, #8
  99 006a 1A63     		str	r2, [r3, #48]
 100 006c 1B6B     		ldr	r3, [r3, #48]
 101 006e 03F00803 		and	r3, r3, #8
 102 0072 0493     		str	r3, [sp, #16]
 103 0074 049B     		ldr	r3, [sp, #16]
 104              	.LBE6:
 453:Src/main.c    **** 
 454:Src/main.c    ****   /*Configure GPIO pin Output Level */
 455:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 105              		.loc 1 455 0
 106 0076 114F     		ldr	r7, .L3+4
 107 0078 2246     		mov	r2, r4
 108 007a 2021     		movs	r1, #32
 109 007c 3846     		mov	r0, r7
 110 007e FFF7FEFF 		bl	HAL_GPIO_WritePin
 111              	.LVL0:
 456:Src/main.c    **** 
 457:Src/main.c    ****   /*Configure GPIO pin Output Level */
 458:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 112              		.loc 1 458 0
 113 0082 0F4E     		ldr	r6, .L3+8
ARM GAS  /tmp/cc1WLFWY.s 			page 11


 114 0084 2246     		mov	r2, r4
 115 0086 0121     		movs	r1, #1
 116 0088 3046     		mov	r0, r6
 117 008a FFF7FEFF 		bl	HAL_GPIO_WritePin
 118              	.LVL1:
 459:Src/main.c    **** 
 460:Src/main.c    ****   /*Configure GPIO pin : PA5 */
 461:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_5;
 119              		.loc 1 461 0
 120 008e 2023     		movs	r3, #32
 121 0090 0593     		str	r3, [sp, #20]
 462:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 122              		.loc 1 462 0
 123 0092 0125     		movs	r5, #1
 124 0094 0695     		str	r5, [sp, #24]
 463:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 125              		.loc 1 463 0
 126 0096 0795     		str	r5, [sp, #28]
 464:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 127              		.loc 1 464 0
 128 0098 0894     		str	r4, [sp, #32]
 465:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 129              		.loc 1 465 0
 130 009a 05A9     		add	r1, sp, #20
 131 009c 3846     		mov	r0, r7
 132 009e FFF7FEFF 		bl	HAL_GPIO_Init
 133              	.LVL2:
 466:Src/main.c    **** 
 467:Src/main.c    ****   /*Configure GPIO pin : PB0 */
 468:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0;
 134              		.loc 1 468 0
 135 00a2 0595     		str	r5, [sp, #20]
 469:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 136              		.loc 1 469 0
 137 00a4 0695     		str	r5, [sp, #24]
 470:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 138              		.loc 1 470 0
 139 00a6 0795     		str	r5, [sp, #28]
 471:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 140              		.loc 1 471 0
 141 00a8 0894     		str	r4, [sp, #32]
 472:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 142              		.loc 1 472 0
 143 00aa 05A9     		add	r1, sp, #20
 144 00ac 3046     		mov	r0, r6
 145 00ae FFF7FEFF 		bl	HAL_GPIO_Init
 146              	.LVL3:
 473:Src/main.c    **** 
 474:Src/main.c    **** }
 147              		.loc 1 474 0
 148 00b2 0BB0     		add	sp, sp, #44
 149              	.LCFI2:
 150              		.cfi_def_cfa_offset 20
 151              		@ sp needed
 152 00b4 F0BD     		pop	{r4, r5, r6, r7, pc}
 153              	.L4:
 154 00b6 00BF     		.align	2
ARM GAS  /tmp/cc1WLFWY.s 			page 12


 155              	.L3:
 156 00b8 00380240 		.word	1073887232
 157 00bc 00000240 		.word	1073872896
 158 00c0 00040240 		.word	1073873920
 159              		.cfi_endproc
 160              	.LFE140:
 162              		.section	.text.MX_DMA_Init,"ax",%progbits
 163              		.align	1
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 167              		.fpu fpv4-sp-d16
 169              	MX_DMA_Init:
 170              	.LFB139:
 423:Src/main.c    **** 
 171              		.loc 1 423 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 8
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175 0000 10B5     		push	{r4, lr}
 176              	.LCFI3:
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 4, -8
 179              		.cfi_offset 14, -4
 180 0002 82B0     		sub	sp, sp, #8
 181              	.LCFI4:
 182              		.cfi_def_cfa_offset 16
 183              	.LBB7:
 426:Src/main.c    **** 
 184              		.loc 1 426 0
 185 0004 0024     		movs	r4, #0
 186 0006 0194     		str	r4, [sp, #4]
 187 0008 0D4B     		ldr	r3, .L7
 188 000a 1A6B     		ldr	r2, [r3, #48]
 189 000c 42F48002 		orr	r2, r2, #4194304
 190 0010 1A63     		str	r2, [r3, #48]
 191 0012 1B6B     		ldr	r3, [r3, #48]
 192 0014 03F48003 		and	r3, r3, #4194304
 193 0018 0193     		str	r3, [sp, #4]
 194 001a 019B     		ldr	r3, [sp, #4]
 195              	.LBE7:
 430:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA2_Stream3_IRQn);
 196              		.loc 1 430 0
 197 001c 2246     		mov	r2, r4
 198 001e 2146     		mov	r1, r4
 199 0020 3B20     		movs	r0, #59
 200 0022 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 201              	.LVL4:
 431:Src/main.c    ****   /* DMA2_Stream6_IRQn interrupt configuration */
 202              		.loc 1 431 0
 203 0026 3B20     		movs	r0, #59
 204 0028 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 205              	.LVL5:
 433:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA2_Stream6_IRQn);
 206              		.loc 1 433 0
 207 002c 2246     		mov	r2, r4
 208 002e 2146     		mov	r1, r4
ARM GAS  /tmp/cc1WLFWY.s 			page 13


 209 0030 4520     		movs	r0, #69
 210 0032 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 211              	.LVL6:
 434:Src/main.c    **** 
 212              		.loc 1 434 0
 213 0036 4520     		movs	r0, #69
 214 0038 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 215              	.LVL7:
 436:Src/main.c    **** 
 216              		.loc 1 436 0
 217 003c 02B0     		add	sp, sp, #8
 218              	.LCFI5:
 219              		.cfi_def_cfa_offset 8
 220              		@ sp needed
 221 003e 10BD     		pop	{r4, pc}
 222              	.L8:
 223              		.align	2
 224              	.L7:
 225 0040 00380240 		.word	1073887232
 226              		.cfi_endproc
 227              	.LFE139:
 229              		.section	.text.MX_NVIC_Init,"ax",%progbits
 230              		.align	1
 231              		.syntax unified
 232              		.thumb
 233              		.thumb_func
 234              		.fpu fpv4-sp-d16
 236              	MX_NVIC_Init:
 237              	.LFB132:
 190:Src/main.c    ****   /* CAN1_RX0_IRQn interrupt configuration */
 238              		.loc 1 190 0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242 0000 08B5     		push	{r3, lr}
 243              	.LCFI6:
 244              		.cfi_def_cfa_offset 8
 245              		.cfi_offset 3, -8
 246              		.cfi_offset 14, -4
 192:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_RX0_IRQn);
 247              		.loc 1 192 0
 248 0002 0022     		movs	r2, #0
 249 0004 1146     		mov	r1, r2
 250 0006 1420     		movs	r0, #20
 251 0008 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 252              	.LVL8:
 193:Src/main.c    ****   /* CAN1_RX1_IRQn interrupt configuration */
 253              		.loc 1 193 0
 254 000c 1420     		movs	r0, #20
 255 000e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 256              	.LVL9:
 195:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_RX1_IRQn);
 257              		.loc 1 195 0
 258 0012 0022     		movs	r2, #0
 259 0014 1146     		mov	r1, r2
 260 0016 1520     		movs	r0, #21
 261 0018 FFF7FEFF 		bl	HAL_NVIC_SetPriority
ARM GAS  /tmp/cc1WLFWY.s 			page 14


 262              	.LVL10:
 196:Src/main.c    ****   /* CAN1_SCE_IRQn interrupt configuration */
 263              		.loc 1 196 0
 264 001c 1520     		movs	r0, #21
 265 001e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 266              	.LVL11:
 198:Src/main.c    ****   HAL_NVIC_EnableIRQ(CAN1_SCE_IRQn);
 267              		.loc 1 198 0
 268 0022 0022     		movs	r2, #0
 269 0024 1146     		mov	r1, r2
 270 0026 1620     		movs	r0, #22
 271 0028 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 272              	.LVL12:
 199:Src/main.c    ****   /* TIM6_DAC_IRQn interrupt configuration */
 273              		.loc 1 199 0
 274 002c 1620     		movs	r0, #22
 275 002e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 276              	.LVL13:
 201:Src/main.c    ****   HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 277              		.loc 1 201 0
 278 0032 0022     		movs	r2, #0
 279 0034 1146     		mov	r1, r2
 280 0036 3620     		movs	r0, #54
 281 0038 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 282              	.LVL14:
 202:Src/main.c    ****   /* TIM7_IRQn interrupt configuration */
 283              		.loc 1 202 0
 284 003c 3620     		movs	r0, #54
 285 003e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 286              	.LVL15:
 204:Src/main.c    ****   HAL_NVIC_EnableIRQ(TIM7_IRQn);
 287              		.loc 1 204 0
 288 0042 0022     		movs	r2, #0
 289 0044 1146     		mov	r1, r2
 290 0046 3720     		movs	r0, #55
 291 0048 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 292              	.LVL16:
 205:Src/main.c    **** }
 293              		.loc 1 205 0
 294 004c 3720     		movs	r0, #55
 295 004e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 296              	.LVL17:
 297 0052 08BD     		pop	{r3, pc}
 298              		.cfi_endproc
 299              	.LFE132:
 301              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
 302              		.align	1
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 306              		.fpu fpv4-sp-d16
 308              	MX_USART3_UART_Init:
 309              	.LFB138:
 392:Src/main.c    **** 
 310              		.loc 1 392 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc1WLFWY.s 			page 15


 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314 0000 08B5     		push	{r3, lr}
 315              	.LCFI7:
 316              		.cfi_def_cfa_offset 8
 317              		.cfi_offset 3, -8
 318              		.cfi_offset 14, -4
 401:Src/main.c    ****   huart3.Init.BaudRate = 115200;
 319              		.loc 1 401 0
 320 0002 0848     		ldr	r0, .L13
 321 0004 084B     		ldr	r3, .L13+4
 322 0006 0360     		str	r3, [r0]
 402:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 323              		.loc 1 402 0
 324 0008 4FF4E133 		mov	r3, #115200
 325 000c 4360     		str	r3, [r0, #4]
 403:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 326              		.loc 1 403 0
 327 000e 0023     		movs	r3, #0
 328 0010 8360     		str	r3, [r0, #8]
 404:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 329              		.loc 1 404 0
 330 0012 C360     		str	r3, [r0, #12]
 405:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 331              		.loc 1 405 0
 332 0014 0361     		str	r3, [r0, #16]
 406:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 333              		.loc 1 406 0
 334 0016 0C22     		movs	r2, #12
 335 0018 4261     		str	r2, [r0, #20]
 407:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 336              		.loc 1 407 0
 337 001a 8361     		str	r3, [r0, #24]
 408:Src/main.c    ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 338              		.loc 1 408 0
 339 001c C361     		str	r3, [r0, #28]
 409:Src/main.c    ****   {
 340              		.loc 1 409 0
 341 001e FFF7FEFF 		bl	HAL_UART_Init
 342              	.LVL18:
 343 0022 08BD     		pop	{r3, pc}
 344              	.L14:
 345              		.align	2
 346              	.L13:
 347 0024 00000000 		.word	huart3
 348 0028 00480040 		.word	1073760256
 349              		.cfi_endproc
 350              	.LFE138:
 352              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 353              		.align	1
 354              		.syntax unified
 355              		.thumb
 356              		.thumb_func
 357              		.fpu fpv4-sp-d16
 359              	MX_USART2_UART_Init:
 360              	.LFB137:
 359:Src/main.c    **** 
 361              		.loc 1 359 0
ARM GAS  /tmp/cc1WLFWY.s 			page 16


 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 0
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 365 0000 08B5     		push	{r3, lr}
 366              	.LCFI8:
 367              		.cfi_def_cfa_offset 8
 368              		.cfi_offset 3, -8
 369              		.cfi_offset 14, -4
 368:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 370              		.loc 1 368 0
 371 0002 0848     		ldr	r0, .L17
 372 0004 084B     		ldr	r3, .L17+4
 373 0006 0360     		str	r3, [r0]
 369:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 374              		.loc 1 369 0
 375 0008 4FF4E133 		mov	r3, #115200
 376 000c 4360     		str	r3, [r0, #4]
 370:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 377              		.loc 1 370 0
 378 000e 0023     		movs	r3, #0
 379 0010 8360     		str	r3, [r0, #8]
 371:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 380              		.loc 1 371 0
 381 0012 C360     		str	r3, [r0, #12]
 372:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 382              		.loc 1 372 0
 383 0014 0361     		str	r3, [r0, #16]
 373:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 384              		.loc 1 373 0
 385 0016 0C22     		movs	r2, #12
 386 0018 4261     		str	r2, [r0, #20]
 374:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 387              		.loc 1 374 0
 388 001a 8361     		str	r3, [r0, #24]
 375:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 389              		.loc 1 375 0
 390 001c C361     		str	r3, [r0, #28]
 376:Src/main.c    ****   {
 391              		.loc 1 376 0
 392 001e FFF7FEFF 		bl	HAL_UART_Init
 393              	.LVL19:
 394 0022 08BD     		pop	{r3, pc}
 395              	.L18:
 396              		.align	2
 397              	.L17:
 398 0024 00000000 		.word	huart2
 399 0028 00440040 		.word	1073759232
 400              		.cfi_endproc
 401              	.LFE137:
 403              		.section	.text.MX_SDIO_SD_Init,"ax",%progbits
 404              		.align	1
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.fpu fpv4-sp-d16
 410              	MX_SDIO_SD_Init:
 411              	.LFB134:
ARM GAS  /tmp/cc1WLFWY.s 			page 17


 251:Src/main.c    **** 
 412              		.loc 1 251 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416 0000 08B5     		push	{r3, lr}
 417              	.LCFI9:
 418              		.cfi_def_cfa_offset 8
 419              		.cfi_offset 3, -8
 420              		.cfi_offset 14, -4
 260:Src/main.c    ****   hsd.Init.ClockEdge = SDIO_CLOCK_EDGE_RISING;
 421              		.loc 1 260 0
 422 0002 0648     		ldr	r0, .L21
 423 0004 064B     		ldr	r3, .L21+4
 424 0006 0360     		str	r3, [r0]
 261:Src/main.c    ****   hsd.Init.ClockBypass = SDIO_CLOCK_BYPASS_DISABLE;
 425              		.loc 1 261 0
 426 0008 0023     		movs	r3, #0
 427 000a 4360     		str	r3, [r0, #4]
 262:Src/main.c    ****   hsd.Init.ClockPowerSave = SDIO_CLOCK_POWER_SAVE_DISABLE;
 428              		.loc 1 262 0
 429 000c 8360     		str	r3, [r0, #8]
 263:Src/main.c    ****   hsd.Init.BusWide = SDIO_BUS_WIDE_1B;
 430              		.loc 1 263 0
 431 000e C360     		str	r3, [r0, #12]
 264:Src/main.c    ****   hsd.Init.HardwareFlowControl = SDIO_HARDWARE_FLOW_CONTROL_DISABLE;
 432              		.loc 1 264 0
 433 0010 0361     		str	r3, [r0, #16]
 265:Src/main.c    ****   hsd.Init.ClockDiv = 0;
 434              		.loc 1 265 0
 435 0012 4361     		str	r3, [r0, #20]
 266:Src/main.c    ****   if (HAL_SD_Init(&hsd) != HAL_OK)
 436              		.loc 1 266 0
 437 0014 8361     		str	r3, [r0, #24]
 267:Src/main.c    ****   {
 438              		.loc 1 267 0
 439 0016 FFF7FEFF 		bl	HAL_SD_Init
 440              	.LVL20:
 441 001a 08BD     		pop	{r3, pc}
 442              	.L22:
 443              		.align	2
 444              	.L21:
 445 001c 00000000 		.word	hsd
 446 0020 002C0140 		.word	1073818624
 447              		.cfi_endproc
 448              	.LFE134:
 450              		.section	.text.MX_CAN1_Init,"ax",%progbits
 451              		.align	1
 452              		.syntax unified
 453              		.thumb
 454              		.thumb_func
 455              		.fpu fpv4-sp-d16
 457              	MX_CAN1_Init:
 458              	.LFB133:
 214:Src/main.c    **** 
 459              		.loc 1 214 0
 460              		.cfi_startproc
ARM GAS  /tmp/cc1WLFWY.s 			page 18


 461              		@ args = 0, pretend = 0, frame = 0
 462              		@ frame_needed = 0, uses_anonymous_args = 0
 463 0000 08B5     		push	{r3, lr}
 464              	.LCFI10:
 465              		.cfi_def_cfa_offset 8
 466              		.cfi_offset 3, -8
 467              		.cfi_offset 14, -4
 223:Src/main.c    ****   hcan1.Init.Prescaler = 2;
 468              		.loc 1 223 0
 469 0002 0B48     		ldr	r0, .L25
 470 0004 0B4B     		ldr	r3, .L25+4
 471 0006 0360     		str	r3, [r0]
 224:Src/main.c    ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 472              		.loc 1 224 0
 473 0008 0223     		movs	r3, #2
 474 000a 4360     		str	r3, [r0, #4]
 225:Src/main.c    ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 475              		.loc 1 225 0
 476 000c 0023     		movs	r3, #0
 477 000e 8360     		str	r3, [r0, #8]
 226:Src/main.c    ****   hcan1.Init.TimeSeg1 = CAN_BS1_12TQ;
 478              		.loc 1 226 0
 479 0010 C360     		str	r3, [r0, #12]
 227:Src/main.c    ****   hcan1.Init.TimeSeg2 = CAN_BS2_5TQ;
 480              		.loc 1 227 0
 481 0012 4FF43022 		mov	r2, #720896
 482 0016 0261     		str	r2, [r0, #16]
 228:Src/main.c    ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 483              		.loc 1 228 0
 484 0018 4FF48002 		mov	r2, #4194304
 485 001c 4261     		str	r2, [r0, #20]
 229:Src/main.c    ****   hcan1.Init.AutoBusOff = DISABLE;
 486              		.loc 1 229 0
 487 001e 0376     		strb	r3, [r0, #24]
 230:Src/main.c    ****   hcan1.Init.AutoWakeUp = DISABLE;
 488              		.loc 1 230 0
 489 0020 4376     		strb	r3, [r0, #25]
 231:Src/main.c    ****   hcan1.Init.AutoRetransmission = DISABLE;
 490              		.loc 1 231 0
 491 0022 8376     		strb	r3, [r0, #26]
 232:Src/main.c    ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 492              		.loc 1 232 0
 493 0024 C376     		strb	r3, [r0, #27]
 233:Src/main.c    ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 494              		.loc 1 233 0
 495 0026 0377     		strb	r3, [r0, #28]
 234:Src/main.c    ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 496              		.loc 1 234 0
 497 0028 4377     		strb	r3, [r0, #29]
 235:Src/main.c    ****   {
 498              		.loc 1 235 0
 499 002a FFF7FEFF 		bl	HAL_CAN_Init
 500              	.LVL21:
 501 002e 08BD     		pop	{r3, pc}
 502              	.L26:
 503              		.align	2
 504              	.L25:
ARM GAS  /tmp/cc1WLFWY.s 			page 19


 505 0030 00000000 		.word	hcan1
 506 0034 00640040 		.word	1073767424
 507              		.cfi_endproc
 508              	.LFE133:
 510              		.section	.text.MX_TIM6_Init,"ax",%progbits
 511              		.align	1
 512              		.syntax unified
 513              		.thumb
 514              		.thumb_func
 515              		.fpu fpv4-sp-d16
 517              	MX_TIM6_Init:
 518              	.LFB135:
 283:Src/main.c    **** 
 519              		.loc 1 283 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 8
 522              		@ frame_needed = 0, uses_anonymous_args = 0
 523 0000 30B5     		push	{r4, r5, lr}
 524              	.LCFI11:
 525              		.cfi_def_cfa_offset 12
 526              		.cfi_offset 4, -12
 527              		.cfi_offset 5, -8
 528              		.cfi_offset 14, -4
 529 0002 83B0     		sub	sp, sp, #12
 530              	.LCFI12:
 531              		.cfi_def_cfa_offset 24
 289:Src/main.c    **** 
 532              		.loc 1 289 0
 533 0004 0025     		movs	r5, #0
 534 0006 0095     		str	r5, [sp]
 535 0008 0195     		str	r5, [sp, #4]
 294:Src/main.c    ****   htim6.Init.Prescaler = 72;
 536              		.loc 1 294 0
 537 000a 0A4C     		ldr	r4, .L29
 538 000c 0A4B     		ldr	r3, .L29+4
 539 000e 2360     		str	r3, [r4]
 295:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 540              		.loc 1 295 0
 541 0010 4823     		movs	r3, #72
 542 0012 6360     		str	r3, [r4, #4]
 296:Src/main.c    ****   htim6.Init.Period = 1000;
 543              		.loc 1 296 0
 544 0014 A560     		str	r5, [r4, #8]
 297:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 545              		.loc 1 297 0
 546 0016 4FF47A73 		mov	r3, #1000
 547 001a E360     		str	r3, [r4, #12]
 298:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 548              		.loc 1 298 0
 549 001c A561     		str	r5, [r4, #24]
 299:Src/main.c    ****   {
 550              		.loc 1 299 0
 551 001e 2046     		mov	r0, r4
 552 0020 FFF7FEFF 		bl	HAL_TIM_Base_Init
 553              	.LVL22:
 303:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 554              		.loc 1 303 0
ARM GAS  /tmp/cc1WLFWY.s 			page 20


 555 0024 0095     		str	r5, [sp]
 304:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 556              		.loc 1 304 0
 557 0026 0195     		str	r5, [sp, #4]
 305:Src/main.c    ****   {
 558              		.loc 1 305 0
 559 0028 6946     		mov	r1, sp
 560 002a 2046     		mov	r0, r4
 561 002c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 562              	.LVL23:
 313:Src/main.c    **** 
 563              		.loc 1 313 0
 564 0030 03B0     		add	sp, sp, #12
 565              	.LCFI13:
 566              		.cfi_def_cfa_offset 12
 567              		@ sp needed
 568 0032 30BD     		pop	{r4, r5, pc}
 569              	.L30:
 570              		.align	2
 571              	.L29:
 572 0034 00000000 		.word	htim6
 573 0038 00100040 		.word	1073745920
 574              		.cfi_endproc
 575              	.LFE135:
 577              		.section	.text.MX_TIM7_Init,"ax",%progbits
 578              		.align	1
 579              		.syntax unified
 580              		.thumb
 581              		.thumb_func
 582              		.fpu fpv4-sp-d16
 584              	MX_TIM7_Init:
 585              	.LFB136:
 321:Src/main.c    **** 
 586              		.loc 1 321 0
 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 8
 589              		@ frame_needed = 0, uses_anonymous_args = 0
 590 0000 30B5     		push	{r4, r5, lr}
 591              	.LCFI14:
 592              		.cfi_def_cfa_offset 12
 593              		.cfi_offset 4, -12
 594              		.cfi_offset 5, -8
 595              		.cfi_offset 14, -4
 596 0002 83B0     		sub	sp, sp, #12
 597              	.LCFI15:
 598              		.cfi_def_cfa_offset 24
 327:Src/main.c    **** 
 599              		.loc 1 327 0
 600 0004 0025     		movs	r5, #0
 601 0006 0095     		str	r5, [sp]
 602 0008 0195     		str	r5, [sp, #4]
 332:Src/main.c    ****   htim7.Init.Prescaler = 3600;
 603              		.loc 1 332 0
 604 000a 0B4C     		ldr	r4, .L33
 605 000c 0B4B     		ldr	r3, .L33+4
 606 000e 2360     		str	r3, [r4]
 333:Src/main.c    ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
ARM GAS  /tmp/cc1WLFWY.s 			page 21


 607              		.loc 1 333 0
 608 0010 4FF46163 		mov	r3, #3600
 609 0014 6360     		str	r3, [r4, #4]
 334:Src/main.c    ****   htim7.Init.Period = 1999;
 610              		.loc 1 334 0
 611 0016 A560     		str	r5, [r4, #8]
 335:Src/main.c    ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 612              		.loc 1 335 0
 613 0018 40F2CF73 		movw	r3, #1999
 614 001c E360     		str	r3, [r4, #12]
 336:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 615              		.loc 1 336 0
 616 001e A561     		str	r5, [r4, #24]
 337:Src/main.c    ****   {
 617              		.loc 1 337 0
 618 0020 2046     		mov	r0, r4
 619 0022 FFF7FEFF 		bl	HAL_TIM_Base_Init
 620              	.LVL24:
 341:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 621              		.loc 1 341 0
 622 0026 0095     		str	r5, [sp]
 342:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 623              		.loc 1 342 0
 624 0028 0195     		str	r5, [sp, #4]
 343:Src/main.c    ****   {
 625              		.loc 1 343 0
 626 002a 6946     		mov	r1, sp
 627 002c 2046     		mov	r0, r4
 628 002e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 629              	.LVL25:
 351:Src/main.c    **** 
 630              		.loc 1 351 0
 631 0032 03B0     		add	sp, sp, #12
 632              	.LCFI16:
 633              		.cfi_def_cfa_offset 12
 634              		@ sp needed
 635 0034 30BD     		pop	{r4, r5, pc}
 636              	.L34:
 637 0036 00BF     		.align	2
 638              	.L33:
 639 0038 00000000 		.word	htim7
 640 003c 00140040 		.word	1073746944
 641              		.cfi_endproc
 642              	.LFE136:
 644              		.section	.text.SystemClock_Config,"ax",%progbits
 645              		.align	1
 646              		.global	SystemClock_Config
 647              		.syntax unified
 648              		.thumb
 649              		.thumb_func
 650              		.fpu fpv4-sp-d16
 652              	SystemClock_Config:
 653              	.LFB131:
 139:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 654              		.loc 1 139 0
 655              		.cfi_startproc
 656              		@ args = 0, pretend = 0, frame = 176
ARM GAS  /tmp/cc1WLFWY.s 			page 22


 657              		@ frame_needed = 0, uses_anonymous_args = 0
 658 0000 30B5     		push	{r4, r5, lr}
 659              	.LCFI17:
 660              		.cfi_def_cfa_offset 12
 661              		.cfi_offset 4, -12
 662              		.cfi_offset 5, -8
 663              		.cfi_offset 14, -4
 664 0002 ADB0     		sub	sp, sp, #180
 665              	.LCFI18:
 666              		.cfi_def_cfa_offset 192
 140:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 667              		.loc 1 140 0
 668 0004 3422     		movs	r2, #52
 669 0006 0021     		movs	r1, #0
 670 0008 1FA8     		add	r0, sp, #124
 671 000a FFF7FEFF 		bl	memset
 672              	.LVL26:
 141:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 673              		.loc 1 141 0
 674 000e 0024     		movs	r4, #0
 675 0010 1A94     		str	r4, [sp, #104]
 676 0012 1B94     		str	r4, [sp, #108]
 677 0014 1C94     		str	r4, [sp, #112]
 678 0016 1D94     		str	r4, [sp, #116]
 679 0018 1E94     		str	r4, [sp, #120]
 142:Src/main.c    **** 
 680              		.loc 1 142 0
 681 001a 5C22     		movs	r2, #92
 682 001c 2146     		mov	r1, r4
 683 001e 03A8     		add	r0, sp, #12
 684 0020 FFF7FEFF 		bl	memset
 685              	.LVL27:
 686              	.LBB8:
 146:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 687              		.loc 1 146 0
 688 0024 0194     		str	r4, [sp, #4]
 689 0026 204B     		ldr	r3, .L37
 690 0028 1A6C     		ldr	r2, [r3, #64]
 691 002a 42F08052 		orr	r2, r2, #268435456
 692 002e 1A64     		str	r2, [r3, #64]
 693 0030 1B6C     		ldr	r3, [r3, #64]
 694 0032 03F08053 		and	r3, r3, #268435456
 695 0036 0193     		str	r3, [sp, #4]
 696 0038 019B     		ldr	r3, [sp, #4]
 697              	.LBE8:
 698              	.LBB9:
 147:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 699              		.loc 1 147 0
 700 003a 0294     		str	r4, [sp, #8]
 701 003c 1B4B     		ldr	r3, .L37+4
 702 003e 1A68     		ldr	r2, [r3]
 703 0040 42F44042 		orr	r2, r2, #49152
 704 0044 1A60     		str	r2, [r3]
 705 0046 1B68     		ldr	r3, [r3]
 706 0048 03F44043 		and	r3, r3, #49152
 707 004c 0293     		str	r3, [sp, #8]
 708 004e 029B     		ldr	r3, [sp, #8]
ARM GAS  /tmp/cc1WLFWY.s 			page 23


 709              	.LBE9:
 150:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 710              		.loc 1 150 0
 711 0050 0123     		movs	r3, #1
 712 0052 1F93     		str	r3, [sp, #124]
 151:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 713              		.loc 1 151 0
 714 0054 4FF4A023 		mov	r3, #327680
 715 0058 2093     		str	r3, [sp, #128]
 152:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 716              		.loc 1 152 0
 717 005a 0225     		movs	r5, #2
 718 005c 2595     		str	r5, [sp, #148]
 153:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 719              		.loc 1 153 0
 720 005e 4FF48003 		mov	r3, #4194304
 721 0062 2693     		str	r3, [sp, #152]
 154:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 288;
 722              		.loc 1 154 0
 723 0064 0823     		movs	r3, #8
 724 0066 2793     		str	r3, [sp, #156]
 155:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 725              		.loc 1 155 0
 726 0068 4FF49072 		mov	r2, #288
 727 006c 2892     		str	r2, [sp, #160]
 156:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 8;
 728              		.loc 1 156 0
 729 006e 2995     		str	r5, [sp, #164]
 157:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = 2;
 730              		.loc 1 157 0
 731 0070 2A93     		str	r3, [sp, #168]
 158:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 732              		.loc 1 158 0
 733 0072 2B95     		str	r5, [sp, #172]
 159:Src/main.c    ****   {
 734              		.loc 1 159 0
 735 0074 1FA8     		add	r0, sp, #124
 736 0076 FFF7FEFF 		bl	HAL_RCC_OscConfig
 737              	.LVL28:
 165:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 738              		.loc 1 165 0
 739 007a 0F23     		movs	r3, #15
 740 007c 1A93     		str	r3, [sp, #104]
 167:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 741              		.loc 1 167 0
 742 007e 1B95     		str	r5, [sp, #108]
 168:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 743              		.loc 1 168 0
 744 0080 1C94     		str	r4, [sp, #112]
 169:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV4;
 745              		.loc 1 169 0
 746 0082 4FF4A053 		mov	r3, #5120
 747 0086 1D93     		str	r3, [sp, #116]
 170:Src/main.c    **** 
 748              		.loc 1 170 0
 749 0088 1E93     		str	r3, [sp, #120]
 172:Src/main.c    ****   {
ARM GAS  /tmp/cc1WLFWY.s 			page 24


 750              		.loc 1 172 0
 751 008a 0421     		movs	r1, #4
 752 008c 1AA8     		add	r0, sp, #104
 753 008e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 754              	.LVL29:
 176:Src/main.c    ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48CLKSOURCE_PLLQ;
 755              		.loc 1 176 0
 756 0092 4FF44073 		mov	r3, #768
 757 0096 0393     		str	r3, [sp, #12]
 177:Src/main.c    ****   PeriphClkInitStruct.SdioClockSelection = RCC_SDIOCLKSOURCE_CLK48;
 758              		.loc 1 177 0
 759 0098 1894     		str	r4, [sp, #96]
 178:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 760              		.loc 1 178 0
 761 009a 1494     		str	r4, [sp, #80]
 179:Src/main.c    ****   {
 762              		.loc 1 179 0
 763 009c 03A8     		add	r0, sp, #12
 764 009e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 765              	.LVL30:
 183:Src/main.c    **** 
 766              		.loc 1 183 0
 767 00a2 2DB0     		add	sp, sp, #180
 768              	.LCFI19:
 769              		.cfi_def_cfa_offset 12
 770              		@ sp needed
 771 00a4 30BD     		pop	{r4, r5, pc}
 772              	.L38:
 773 00a6 00BF     		.align	2
 774              	.L37:
 775 00a8 00380240 		.word	1073887232
 776 00ac 00700040 		.word	1073770496
 777              		.cfi_endproc
 778              	.LFE131:
 780              		.section	.text.main,"ax",%progbits
 781              		.align	1
 782              		.global	main
 783              		.syntax unified
 784              		.thumb
 785              		.thumb_func
 786              		.fpu fpv4-sp-d16
 788              	main:
 789              	.LFB130:
  85:Src/main.c    ****   /* USER CODE BEGIN 1 */
 790              		.loc 1 85 0
 791              		.cfi_startproc
 792              		@ Volatile: function does not return.
 793              		@ args = 0, pretend = 0, frame = 0
 794              		@ frame_needed = 0, uses_anonymous_args = 0
 795 0000 08B5     		push	{r3, lr}
 796              	.LCFI20:
 797              		.cfi_def_cfa_offset 8
 798              		.cfi_offset 3, -8
 799              		.cfi_offset 14, -4
  94:Src/main.c    **** 
 800              		.loc 1 94 0
 801 0002 FFF7FEFF 		bl	HAL_Init
ARM GAS  /tmp/cc1WLFWY.s 			page 25


 802              	.LVL31:
 101:Src/main.c    **** 
 803              		.loc 1 101 0
 804 0006 FFF7FEFF 		bl	SystemClock_Config
 805              	.LVL32:
 108:Src/main.c    ****   MX_DMA_Init();
 806              		.loc 1 108 0
 807 000a FFF7FEFF 		bl	MX_GPIO_Init
 808              	.LVL33:
 109:Src/main.c    ****   MX_USART3_UART_Init();
 809              		.loc 1 109 0
 810 000e FFF7FEFF 		bl	MX_DMA_Init
 811              	.LVL34:
 110:Src/main.c    ****   MX_SDIO_SD_Init();
 812              		.loc 1 110 0
 813 0012 FFF7FEFF 		bl	MX_USART3_UART_Init
 814              	.LVL35:
 111:Src/main.c    ****   MX_USART2_UART_Init();
 815              		.loc 1 111 0
 816 0016 FFF7FEFF 		bl	MX_SDIO_SD_Init
 817              	.LVL36:
 112:Src/main.c    ****   MX_CAN1_Init();
 818              		.loc 1 112 0
 819 001a FFF7FEFF 		bl	MX_USART2_UART_Init
 820              	.LVL37:
 113:Src/main.c    ****   MX_TIM6_Init();
 821              		.loc 1 113 0
 822 001e FFF7FEFF 		bl	MX_CAN1_Init
 823              	.LVL38:
 114:Src/main.c    ****   MX_TIM7_Init();
 824              		.loc 1 114 0
 825 0022 FFF7FEFF 		bl	MX_TIM6_Init
 826              	.LVL39:
 115:Src/main.c    **** 
 827              		.loc 1 115 0
 828 0026 FFF7FEFF 		bl	MX_TIM7_Init
 829              	.LVL40:
 118:Src/main.c    ****   /* USER CODE BEGIN 2 */
 830              		.loc 1 118 0
 831 002a FFF7FEFF 		bl	MX_NVIC_Init
 832              	.LVL41:
 833              	.L40:
 834 002e FEE7     		b	.L40
 835              		.cfi_endproc
 836              	.LFE130:
 838              		.section	.text.Error_Handler,"ax",%progbits
 839              		.align	1
 840              		.global	Error_Handler
 841              		.syntax unified
 842              		.thumb
 843              		.thumb_func
 844              		.fpu fpv4-sp-d16
 846              	Error_Handler:
 847              	.LFB141:
 475:Src/main.c    **** 
 476:Src/main.c    **** /* USER CODE BEGIN 4 */
 477:Src/main.c    **** 
ARM GAS  /tmp/cc1WLFWY.s 			page 26


 478:Src/main.c    **** /* USER CODE END 4 */
 479:Src/main.c    **** 
 480:Src/main.c    **** /**
 481:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 482:Src/main.c    ****   * @retval None
 483:Src/main.c    ****   */
 484:Src/main.c    **** void Error_Handler(void)
 485:Src/main.c    **** {
 848              		.loc 1 485 0
 849              		.cfi_startproc
 850              		@ args = 0, pretend = 0, frame = 0
 851              		@ frame_needed = 0, uses_anonymous_args = 0
 852              		@ link register save eliminated.
 853 0000 7047     		bx	lr
 854              		.cfi_endproc
 855              	.LFE141:
 857              		.comm	huart3,64,4
 858              		.comm	huart2,64,4
 859              		.comm	htim7,64,4
 860              		.comm	htim6,64,4
 861              		.comm	hdma_sdio_tx,96,4
 862              		.comm	hdma_sdio_rx,96,4
 863              		.comm	hsd,132,4
 864              		.comm	hcan1,40,4
 865              		.text
 866              	.Letext0:
 867              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 868              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 869              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 870              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 871              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 872              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 873              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 874              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 875              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 876              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 877              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 878              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 879              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_sdmmc.h"
 880              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_sd.h"
 881              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 882              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 883              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 884              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 885              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/cc1WLFWY.s 			page 27


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc1WLFWY.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cc1WLFWY.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cc1WLFWY.s:156    .text.MX_GPIO_Init:00000000000000b8 $d
     /tmp/cc1WLFWY.s:163    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/cc1WLFWY.s:169    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/cc1WLFWY.s:225    .text.MX_DMA_Init:0000000000000040 $d
     /tmp/cc1WLFWY.s:230    .text.MX_NVIC_Init:0000000000000000 $t
     /tmp/cc1WLFWY.s:236    .text.MX_NVIC_Init:0000000000000000 MX_NVIC_Init
     /tmp/cc1WLFWY.s:302    .text.MX_USART3_UART_Init:0000000000000000 $t
     /tmp/cc1WLFWY.s:308    .text.MX_USART3_UART_Init:0000000000000000 MX_USART3_UART_Init
     /tmp/cc1WLFWY.s:347    .text.MX_USART3_UART_Init:0000000000000024 $d
                            *COM*:0000000000000040 huart3
     /tmp/cc1WLFWY.s:353    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/cc1WLFWY.s:359    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/cc1WLFWY.s:398    .text.MX_USART2_UART_Init:0000000000000024 $d
                            *COM*:0000000000000040 huart2
     /tmp/cc1WLFWY.s:404    .text.MX_SDIO_SD_Init:0000000000000000 $t
     /tmp/cc1WLFWY.s:410    .text.MX_SDIO_SD_Init:0000000000000000 MX_SDIO_SD_Init
     /tmp/cc1WLFWY.s:445    .text.MX_SDIO_SD_Init:000000000000001c $d
                            *COM*:0000000000000084 hsd
     /tmp/cc1WLFWY.s:451    .text.MX_CAN1_Init:0000000000000000 $t
     /tmp/cc1WLFWY.s:457    .text.MX_CAN1_Init:0000000000000000 MX_CAN1_Init
     /tmp/cc1WLFWY.s:505    .text.MX_CAN1_Init:0000000000000030 $d
                            *COM*:0000000000000028 hcan1
     /tmp/cc1WLFWY.s:511    .text.MX_TIM6_Init:0000000000000000 $t
     /tmp/cc1WLFWY.s:517    .text.MX_TIM6_Init:0000000000000000 MX_TIM6_Init
     /tmp/cc1WLFWY.s:572    .text.MX_TIM6_Init:0000000000000034 $d
                            *COM*:0000000000000040 htim6
     /tmp/cc1WLFWY.s:578    .text.MX_TIM7_Init:0000000000000000 $t
     /tmp/cc1WLFWY.s:584    .text.MX_TIM7_Init:0000000000000000 MX_TIM7_Init
     /tmp/cc1WLFWY.s:639    .text.MX_TIM7_Init:0000000000000038 $d
                            *COM*:0000000000000040 htim7
     /tmp/cc1WLFWY.s:645    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc1WLFWY.s:652    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc1WLFWY.s:775    .text.SystemClock_Config:00000000000000a8 $d
     /tmp/cc1WLFWY.s:781    .text.main:0000000000000000 $t
     /tmp/cc1WLFWY.s:788    .text.main:0000000000000000 main
     /tmp/cc1WLFWY.s:839    .text.Error_Handler:0000000000000000 $t
     /tmp/cc1WLFWY.s:846    .text.Error_Handler:0000000000000000 Error_Handler
                            *COM*:0000000000000060 hdma_sdio_tx
                            *COM*:0000000000000060 hdma_sdio_rx
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_UART_Init
HAL_SD_Init
HAL_CAN_Init
HAL_TIM_Base_Init
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_RCC_OscConfig
ARM GAS  /tmp/cc1WLFWY.s 			page 28


HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
