ARM GAS  /tmp/ccv0PdCB.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	NMI_Handler:
  26              	.LFB130:
  27              		.file 1 "Src/stm32f4xx_it.c"
   1:Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f4xx_it.c **** /**
   3:Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Src/stm32f4xx_it.c ****   * @attention
   8:Src/stm32f4xx_it.c ****   *
   9:Src/stm32f4xx_it.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/stm32f4xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32f4xx_it.c ****   *
  12:Src/stm32f4xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/stm32f4xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Src/stm32f4xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Src/stm32f4xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/stm32f4xx_it.c ****   *
  17:Src/stm32f4xx_it.c ****   ******************************************************************************
  18:Src/stm32f4xx_it.c ****   */
  19:Src/stm32f4xx_it.c **** /* USER CODE END Header */
  20:Src/stm32f4xx_it.c **** 
  21:Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f4xx_it.c **** #include "main.h"
  23:Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  24:Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  26:Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  27:Src/stm32f4xx_it.c **** 
  28:Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  30:Src/stm32f4xx_it.c **** 
  31:Src/stm32f4xx_it.c **** /* USER CODE END TD */
ARM GAS  /tmp/ccv0PdCB.s 			page 2


  32:Src/stm32f4xx_it.c **** 
  33:Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  35:Src/stm32f4xx_it.c ****  
  36:Src/stm32f4xx_it.c **** /* USER CODE END PD */
  37:Src/stm32f4xx_it.c **** 
  38:Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  40:Src/stm32f4xx_it.c **** 
  41:Src/stm32f4xx_it.c **** /* USER CODE END PM */
  42:Src/stm32f4xx_it.c **** 
  43:Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  45:Src/stm32f4xx_it.c **** 
  46:Src/stm32f4xx_it.c **** /* USER CODE END PV */
  47:Src/stm32f4xx_it.c **** 
  48:Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  50:Src/stm32f4xx_it.c **** 
  51:Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  52:Src/stm32f4xx_it.c **** 
  53:Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  55:Src/stm32f4xx_it.c **** 
  56:Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  57:Src/stm32f4xx_it.c **** 
  58:Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_adc1;
  60:Src/stm32f4xx_it.c **** extern ADC_HandleTypeDef hadc1;
  61:Src/stm32f4xx_it.c **** extern CAN_HandleTypeDef hcan1;
  62:Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim2;
  63:Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim4;
  64:Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim5;
  65:Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim6;
  66:Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim7;
  67:Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim10;
  68:Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart1;
  69:Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart2;
  70:Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  71:Src/stm32f4xx_it.c **** 
  72:Src/stm32f4xx_it.c **** /* USER CODE END EV */
  73:Src/stm32f4xx_it.c **** 
  74:Src/stm32f4xx_it.c **** /******************************************************************************/
  75:Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */ 
  76:Src/stm32f4xx_it.c **** /******************************************************************************/
  77:Src/stm32f4xx_it.c **** /**
  78:Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  79:Src/stm32f4xx_it.c ****   */
  80:Src/stm32f4xx_it.c **** void NMI_Handler(void)
  81:Src/stm32f4xx_it.c **** {
  28              		.loc 1 81 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
ARM GAS  /tmp/ccv0PdCB.s 			page 3


  35              	.LFE130:
  37              		.section	.text.HardFault_Handler,"ax",%progbits
  38              		.align	1
  39              		.global	HardFault_Handler
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu fpv4-sp-d16
  45              	HardFault_Handler:
  46              	.LFB131:
  82:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  83:Src/stm32f4xx_it.c **** 
  84:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  85:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  86:Src/stm32f4xx_it.c **** 
  87:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  88:Src/stm32f4xx_it.c **** }
  89:Src/stm32f4xx_it.c **** 
  90:Src/stm32f4xx_it.c **** /**
  91:Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  92:Src/stm32f4xx_it.c ****   */
  93:Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  94:Src/stm32f4xx_it.c **** {
  47              		.loc 1 94 0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.L3:
  54 0000 FEE7     		b	.L3
  55              		.cfi_endproc
  56              	.LFE131:
  58              		.section	.text.MemManage_Handler,"ax",%progbits
  59              		.align	1
  60              		.global	MemManage_Handler
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu fpv4-sp-d16
  66              	MemManage_Handler:
  67              	.LFB132:
  95:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  96:Src/stm32f4xx_it.c **** 
  97:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  98:Src/stm32f4xx_it.c ****   while (1)
  99:Src/stm32f4xx_it.c ****   {
 100:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 101:Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 102:Src/stm32f4xx_it.c ****   }
 103:Src/stm32f4xx_it.c **** }
 104:Src/stm32f4xx_it.c **** 
 105:Src/stm32f4xx_it.c **** /**
 106:Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 107:Src/stm32f4xx_it.c ****   */
 108:Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 109:Src/stm32f4xx_it.c **** {
ARM GAS  /tmp/ccv0PdCB.s 			page 4


  68              		.loc 1 109 0
  69              		.cfi_startproc
  70              		@ Volatile: function does not return.
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73              		@ link register save eliminated.
  74              	.L5:
  75 0000 FEE7     		b	.L5
  76              		.cfi_endproc
  77              	.LFE132:
  79              		.section	.text.BusFault_Handler,"ax",%progbits
  80              		.align	1
  81              		.global	BusFault_Handler
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu fpv4-sp-d16
  87              	BusFault_Handler:
  88              	.LFB133:
 110:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 111:Src/stm32f4xx_it.c **** 
 112:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 113:Src/stm32f4xx_it.c ****   while (1)
 114:Src/stm32f4xx_it.c ****   {
 115:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 116:Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 117:Src/stm32f4xx_it.c ****   }
 118:Src/stm32f4xx_it.c **** }
 119:Src/stm32f4xx_it.c **** 
 120:Src/stm32f4xx_it.c **** /**
 121:Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 122:Src/stm32f4xx_it.c ****   */
 123:Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 124:Src/stm32f4xx_it.c **** {
  89              		.loc 1 124 0
  90              		.cfi_startproc
  91              		@ Volatile: function does not return.
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
  95              	.L7:
  96 0000 FEE7     		b	.L7
  97              		.cfi_endproc
  98              	.LFE133:
 100              		.section	.text.UsageFault_Handler,"ax",%progbits
 101              		.align	1
 102              		.global	UsageFault_Handler
 103              		.syntax unified
 104              		.thumb
 105              		.thumb_func
 106              		.fpu fpv4-sp-d16
 108              	UsageFault_Handler:
 109              	.LFB134:
 125:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 126:Src/stm32f4xx_it.c **** 
 127:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 128:Src/stm32f4xx_it.c ****   while (1)
ARM GAS  /tmp/ccv0PdCB.s 			page 5


 129:Src/stm32f4xx_it.c ****   {
 130:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 131:Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 132:Src/stm32f4xx_it.c ****   }
 133:Src/stm32f4xx_it.c **** }
 134:Src/stm32f4xx_it.c **** 
 135:Src/stm32f4xx_it.c **** /**
 136:Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 137:Src/stm32f4xx_it.c ****   */
 138:Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 139:Src/stm32f4xx_it.c **** {
 110              		.loc 1 139 0
 111              		.cfi_startproc
 112              		@ Volatile: function does not return.
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 116              	.L9:
 117 0000 FEE7     		b	.L9
 118              		.cfi_endproc
 119              	.LFE134:
 121              		.section	.text.SVC_Handler,"ax",%progbits
 122              		.align	1
 123              		.global	SVC_Handler
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 127              		.fpu fpv4-sp-d16
 129              	SVC_Handler:
 130              	.LFB135:
 140:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 141:Src/stm32f4xx_it.c **** 
 142:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 143:Src/stm32f4xx_it.c ****   while (1)
 144:Src/stm32f4xx_it.c ****   {
 145:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 146:Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 147:Src/stm32f4xx_it.c ****   }
 148:Src/stm32f4xx_it.c **** }
 149:Src/stm32f4xx_it.c **** 
 150:Src/stm32f4xx_it.c **** /**
 151:Src/stm32f4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 152:Src/stm32f4xx_it.c ****   */
 153:Src/stm32f4xx_it.c **** void SVC_Handler(void)
 154:Src/stm32f4xx_it.c **** {
 131              		.loc 1 154 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              		@ link register save eliminated.
 136 0000 7047     		bx	lr
 137              		.cfi_endproc
 138              	.LFE135:
 140              		.section	.text.DebugMon_Handler,"ax",%progbits
 141              		.align	1
 142              		.global	DebugMon_Handler
 143              		.syntax unified
ARM GAS  /tmp/ccv0PdCB.s 			page 6


 144              		.thumb
 145              		.thumb_func
 146              		.fpu fpv4-sp-d16
 148              	DebugMon_Handler:
 149              	.LFB136:
 155:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 156:Src/stm32f4xx_it.c **** 
 157:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 158:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 159:Src/stm32f4xx_it.c **** 
 160:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 161:Src/stm32f4xx_it.c **** }
 162:Src/stm32f4xx_it.c **** 
 163:Src/stm32f4xx_it.c **** /**
 164:Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 165:Src/stm32f4xx_it.c ****   */
 166:Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 167:Src/stm32f4xx_it.c **** {
 150              		.loc 1 167 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 155 0000 7047     		bx	lr
 156              		.cfi_endproc
 157              	.LFE136:
 159              		.section	.text.PendSV_Handler,"ax",%progbits
 160              		.align	1
 161              		.global	PendSV_Handler
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv4-sp-d16
 167              	PendSV_Handler:
 168              	.LFB137:
 168:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 169:Src/stm32f4xx_it.c **** 
 170:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 171:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 172:Src/stm32f4xx_it.c **** 
 173:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 174:Src/stm32f4xx_it.c **** }
 175:Src/stm32f4xx_it.c **** 
 176:Src/stm32f4xx_it.c **** /**
 177:Src/stm32f4xx_it.c ****   * @brief This function handles Pendable request for system service.
 178:Src/stm32f4xx_it.c ****   */
 179:Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 180:Src/stm32f4xx_it.c **** {
 169              		.loc 1 180 0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 174 0000 7047     		bx	lr
 175              		.cfi_endproc
 176              	.LFE137:
 178              		.section	.text.SysTick_Handler,"ax",%progbits
ARM GAS  /tmp/ccv0PdCB.s 			page 7


 179              		.align	1
 180              		.global	SysTick_Handler
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu fpv4-sp-d16
 186              	SysTick_Handler:
 187              	.LFB138:
 181:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 182:Src/stm32f4xx_it.c **** 
 183:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 184:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 185:Src/stm32f4xx_it.c **** 
 186:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 187:Src/stm32f4xx_it.c **** }
 188:Src/stm32f4xx_it.c **** 
 189:Src/stm32f4xx_it.c **** /**
 190:Src/stm32f4xx_it.c ****   * @brief This function handles System tick timer.
 191:Src/stm32f4xx_it.c ****   */
 192:Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 193:Src/stm32f4xx_it.c **** {
 188              		.loc 1 193 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		.loc 1 193 0
 193 0000 08B5     		push	{r3, lr}
 194              	.LCFI0:
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 3, -8
 197              		.cfi_offset 14, -4
 194:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 195:Src/stm32f4xx_it.c **** 
 196:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 197:Src/stm32f4xx_it.c ****   HAL_IncTick();
 198              		.loc 1 197 0
 199 0002 FFF7FEFF 		bl	HAL_IncTick
 200              	.LVL0:
 201 0006 08BD     		pop	{r3, pc}
 202              		.cfi_endproc
 203              	.LFE138:
 205              		.section	.text.ADC_IRQHandler,"ax",%progbits
 206              		.align	1
 207              		.global	ADC_IRQHandler
 208              		.syntax unified
 209              		.thumb
 210              		.thumb_func
 211              		.fpu fpv4-sp-d16
 213              	ADC_IRQHandler:
 214              	.LFB139:
 198:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 199:Src/stm32f4xx_it.c **** 
 200:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 201:Src/stm32f4xx_it.c **** }
 202:Src/stm32f4xx_it.c **** 
 203:Src/stm32f4xx_it.c **** /******************************************************************************/
 204:Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
ARM GAS  /tmp/ccv0PdCB.s 			page 8


 205:Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 206:Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 207:Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 208:Src/stm32f4xx_it.c **** /******************************************************************************/
 209:Src/stm32f4xx_it.c **** 
 210:Src/stm32f4xx_it.c **** /**
 211:Src/stm32f4xx_it.c ****   * @brief This function handles ADC1, ADC2 and ADC3 interrupts.
 212:Src/stm32f4xx_it.c ****   */
 213:Src/stm32f4xx_it.c **** void ADC_IRQHandler(void)
 214:Src/stm32f4xx_it.c **** {
 215              		.loc 1 214 0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 0
 218              		@ frame_needed = 0, uses_anonymous_args = 0
 219 0000 08B5     		push	{r3, lr}
 220              	.LCFI1:
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 3, -8
 223              		.cfi_offset 14, -4
 215:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN ADC_IRQn 0 */
 216:Src/stm32f4xx_it.c **** 
 217:Src/stm32f4xx_it.c ****   /* USER CODE END ADC_IRQn 0 */
 218:Src/stm32f4xx_it.c ****   HAL_ADC_IRQHandler(&hadc1);
 224              		.loc 1 218 0
 225 0002 0248     		ldr	r0, .L17
 226 0004 FFF7FEFF 		bl	HAL_ADC_IRQHandler
 227              	.LVL1:
 228 0008 08BD     		pop	{r3, pc}
 229              	.L18:
 230 000a 00BF     		.align	2
 231              	.L17:
 232 000c 00000000 		.word	hadc1
 233              		.cfi_endproc
 234              	.LFE139:
 236              		.section	.text.CAN1_TX_IRQHandler,"ax",%progbits
 237              		.align	1
 238              		.global	CAN1_TX_IRQHandler
 239              		.syntax unified
 240              		.thumb
 241              		.thumb_func
 242              		.fpu fpv4-sp-d16
 244              	CAN1_TX_IRQHandler:
 245              	.LFB140:
 219:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN ADC_IRQn 1 */
 220:Src/stm32f4xx_it.c **** 
 221:Src/stm32f4xx_it.c ****   /* USER CODE END ADC_IRQn 1 */
 222:Src/stm32f4xx_it.c **** }
 223:Src/stm32f4xx_it.c **** 
 224:Src/stm32f4xx_it.c **** /**
 225:Src/stm32f4xx_it.c ****   * @brief This function handles CAN1 TX interrupt.
 226:Src/stm32f4xx_it.c ****   */
 227:Src/stm32f4xx_it.c **** void CAN1_TX_IRQHandler(void)
 228:Src/stm32f4xx_it.c **** {
 246              		.loc 1 228 0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccv0PdCB.s 			page 9


 250 0000 08B5     		push	{r3, lr}
 251              	.LCFI2:
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 3, -8
 254              		.cfi_offset 14, -4
 229:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_TX_IRQn 0 */
 230:Src/stm32f4xx_it.c **** 
 231:Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_TX_IRQn 0 */
 232:Src/stm32f4xx_it.c ****   HAL_CAN_IRQHandler(&hcan1);
 255              		.loc 1 232 0
 256 0002 0248     		ldr	r0, .L21
 257 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 258              	.LVL2:
 259 0008 08BD     		pop	{r3, pc}
 260              	.L22:
 261 000a 00BF     		.align	2
 262              	.L21:
 263 000c 00000000 		.word	hcan1
 264              		.cfi_endproc
 265              	.LFE140:
 267              		.section	.text.CAN1_RX0_IRQHandler,"ax",%progbits
 268              		.align	1
 269              		.global	CAN1_RX0_IRQHandler
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu fpv4-sp-d16
 275              	CAN1_RX0_IRQHandler:
 276              	.LFB141:
 233:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_TX_IRQn 1 */
 234:Src/stm32f4xx_it.c **** 
 235:Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_TX_IRQn 1 */
 236:Src/stm32f4xx_it.c **** }
 237:Src/stm32f4xx_it.c **** 
 238:Src/stm32f4xx_it.c **** /**
 239:Src/stm32f4xx_it.c ****   * @brief This function handles CAN1 RX0 interrupt.
 240:Src/stm32f4xx_it.c ****   */
 241:Src/stm32f4xx_it.c **** void CAN1_RX0_IRQHandler(void)
 242:Src/stm32f4xx_it.c **** {
 277              		.loc 1 242 0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281 0000 08B5     		push	{r3, lr}
 282              	.LCFI3:
 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 3, -8
 285              		.cfi_offset 14, -4
 243:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_RX0_IRQn 0 */
 244:Src/stm32f4xx_it.c **** 
 245:Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_RX0_IRQn 0 */
 246:Src/stm32f4xx_it.c ****   HAL_CAN_IRQHandler(&hcan1);
 286              		.loc 1 246 0
 287 0002 0248     		ldr	r0, .L25
 288 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 289              	.LVL3:
 290 0008 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccv0PdCB.s 			page 10


 291              	.L26:
 292 000a 00BF     		.align	2
 293              	.L25:
 294 000c 00000000 		.word	hcan1
 295              		.cfi_endproc
 296              	.LFE141:
 298              		.section	.text.CAN1_RX1_IRQHandler,"ax",%progbits
 299              		.align	1
 300              		.global	CAN1_RX1_IRQHandler
 301              		.syntax unified
 302              		.thumb
 303              		.thumb_func
 304              		.fpu fpv4-sp-d16
 306              	CAN1_RX1_IRQHandler:
 307              	.LFB142:
 247:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_RX0_IRQn 1 */
 248:Src/stm32f4xx_it.c **** 
 249:Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_RX0_IRQn 1 */
 250:Src/stm32f4xx_it.c **** }
 251:Src/stm32f4xx_it.c **** 
 252:Src/stm32f4xx_it.c **** /**
 253:Src/stm32f4xx_it.c ****   * @brief This function handles CAN1 RX1 interrupt.
 254:Src/stm32f4xx_it.c ****   */
 255:Src/stm32f4xx_it.c **** void CAN1_RX1_IRQHandler(void)
 256:Src/stm32f4xx_it.c **** {
 308              		.loc 1 256 0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 0
 311              		@ frame_needed = 0, uses_anonymous_args = 0
 312 0000 08B5     		push	{r3, lr}
 313              	.LCFI4:
 314              		.cfi_def_cfa_offset 8
 315              		.cfi_offset 3, -8
 316              		.cfi_offset 14, -4
 257:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_RX1_IRQn 0 */
 258:Src/stm32f4xx_it.c **** 
 259:Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_RX1_IRQn 0 */
 260:Src/stm32f4xx_it.c ****   HAL_CAN_IRQHandler(&hcan1);
 317              		.loc 1 260 0
 318 0002 0248     		ldr	r0, .L29
 319 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 320              	.LVL4:
 321 0008 08BD     		pop	{r3, pc}
 322              	.L30:
 323 000a 00BF     		.align	2
 324              	.L29:
 325 000c 00000000 		.word	hcan1
 326              		.cfi_endproc
 327              	.LFE142:
 329              		.section	.text.CAN1_SCE_IRQHandler,"ax",%progbits
 330              		.align	1
 331              		.global	CAN1_SCE_IRQHandler
 332              		.syntax unified
 333              		.thumb
 334              		.thumb_func
 335              		.fpu fpv4-sp-d16
 337              	CAN1_SCE_IRQHandler:
ARM GAS  /tmp/ccv0PdCB.s 			page 11


 338              	.LFB143:
 261:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_RX1_IRQn 1 */
 262:Src/stm32f4xx_it.c **** 
 263:Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_RX1_IRQn 1 */
 264:Src/stm32f4xx_it.c **** }
 265:Src/stm32f4xx_it.c **** 
 266:Src/stm32f4xx_it.c **** /**
 267:Src/stm32f4xx_it.c ****   * @brief This function handles CAN1 SCE interrupt.
 268:Src/stm32f4xx_it.c ****   */
 269:Src/stm32f4xx_it.c **** void CAN1_SCE_IRQHandler(void)
 270:Src/stm32f4xx_it.c **** {
 339              		.loc 1 270 0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 0
 342              		@ frame_needed = 0, uses_anonymous_args = 0
 343 0000 08B5     		push	{r3, lr}
 344              	.LCFI5:
 345              		.cfi_def_cfa_offset 8
 346              		.cfi_offset 3, -8
 347              		.cfi_offset 14, -4
 271:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_SCE_IRQn 0 */
 272:Src/stm32f4xx_it.c **** 
 273:Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_SCE_IRQn 0 */
 274:Src/stm32f4xx_it.c ****   HAL_CAN_IRQHandler(&hcan1);
 348              		.loc 1 274 0
 349 0002 0248     		ldr	r0, .L33
 350 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 351              	.LVL5:
 352 0008 08BD     		pop	{r3, pc}
 353              	.L34:
 354 000a 00BF     		.align	2
 355              	.L33:
 356 000c 00000000 		.word	hcan1
 357              		.cfi_endproc
 358              	.LFE143:
 360              		.section	.text.TIM1_UP_TIM10_IRQHandler,"ax",%progbits
 361              		.align	1
 362              		.global	TIM1_UP_TIM10_IRQHandler
 363              		.syntax unified
 364              		.thumb
 365              		.thumb_func
 366              		.fpu fpv4-sp-d16
 368              	TIM1_UP_TIM10_IRQHandler:
 369              	.LFB144:
 275:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_SCE_IRQn 1 */
 276:Src/stm32f4xx_it.c **** 
 277:Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_SCE_IRQn 1 */
 278:Src/stm32f4xx_it.c **** }
 279:Src/stm32f4xx_it.c **** 
 280:Src/stm32f4xx_it.c **** /**
 281:Src/stm32f4xx_it.c ****   * @brief This function handles TIM1 update interrupt and TIM10 global interrupt.
 282:Src/stm32f4xx_it.c ****   */
 283:Src/stm32f4xx_it.c **** void TIM1_UP_TIM10_IRQHandler(void)
 284:Src/stm32f4xx_it.c **** {
 370              		.loc 1 284 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccv0PdCB.s 			page 12


 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374 0000 08B5     		push	{r3, lr}
 375              	.LCFI6:
 376              		.cfi_def_cfa_offset 8
 377              		.cfi_offset 3, -8
 378              		.cfi_offset 14, -4
 285:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 0 */
 286:Src/stm32f4xx_it.c **** 
 287:Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_UP_TIM10_IRQn 0 */
 288:Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim10);
 379              		.loc 1 288 0
 380 0002 0248     		ldr	r0, .L37
 381 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 382              	.LVL6:
 383 0008 08BD     		pop	{r3, pc}
 384              	.L38:
 385 000a 00BF     		.align	2
 386              	.L37:
 387 000c 00000000 		.word	htim10
 388              		.cfi_endproc
 389              	.LFE144:
 391              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 392              		.align	1
 393              		.global	TIM2_IRQHandler
 394              		.syntax unified
 395              		.thumb
 396              		.thumb_func
 397              		.fpu fpv4-sp-d16
 399              	TIM2_IRQHandler:
 400              	.LFB145:
 289:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 1 */
 290:Src/stm32f4xx_it.c **** 
 291:Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_UP_TIM10_IRQn 1 */
 292:Src/stm32f4xx_it.c **** }
 293:Src/stm32f4xx_it.c **** 
 294:Src/stm32f4xx_it.c **** /**
 295:Src/stm32f4xx_it.c ****   * @brief This function handles TIM2 global interrupt.
 296:Src/stm32f4xx_it.c ****   */
 297:Src/stm32f4xx_it.c **** void TIM2_IRQHandler(void)
 298:Src/stm32f4xx_it.c **** {
 401              		.loc 1 298 0
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 0
 404              		@ frame_needed = 0, uses_anonymous_args = 0
 405 0000 08B5     		push	{r3, lr}
 406              	.LCFI7:
 407              		.cfi_def_cfa_offset 8
 408              		.cfi_offset 3, -8
 409              		.cfi_offset 14, -4
 299:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 300:Src/stm32f4xx_it.c **** 
 301:Src/stm32f4xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 302:Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 410              		.loc 1 302 0
 411 0002 0248     		ldr	r0, .L41
 412 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 413              	.LVL7:
ARM GAS  /tmp/ccv0PdCB.s 			page 13


 414 0008 08BD     		pop	{r3, pc}
 415              	.L42:
 416 000a 00BF     		.align	2
 417              	.L41:
 418 000c 00000000 		.word	htim2
 419              		.cfi_endproc
 420              	.LFE145:
 422              		.section	.text.TIM4_IRQHandler,"ax",%progbits
 423              		.align	1
 424              		.global	TIM4_IRQHandler
 425              		.syntax unified
 426              		.thumb
 427              		.thumb_func
 428              		.fpu fpv4-sp-d16
 430              	TIM4_IRQHandler:
 431              	.LFB146:
 303:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 304:Src/stm32f4xx_it.c **** 
 305:Src/stm32f4xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 306:Src/stm32f4xx_it.c **** }
 307:Src/stm32f4xx_it.c **** 
 308:Src/stm32f4xx_it.c **** /**
 309:Src/stm32f4xx_it.c ****   * @brief This function handles TIM4 global interrupt.
 310:Src/stm32f4xx_it.c ****   */
 311:Src/stm32f4xx_it.c **** void TIM4_IRQHandler(void)
 312:Src/stm32f4xx_it.c **** {
 432              		.loc 1 312 0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 0
 435              		@ frame_needed = 0, uses_anonymous_args = 0
 436 0000 08B5     		push	{r3, lr}
 437              	.LCFI8:
 438              		.cfi_def_cfa_offset 8
 439              		.cfi_offset 3, -8
 440              		.cfi_offset 14, -4
 313:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM4_IRQn 0 */
 314:Src/stm32f4xx_it.c **** 
 315:Src/stm32f4xx_it.c ****   /* USER CODE END TIM4_IRQn 0 */
 316:Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim4);
 441              		.loc 1 316 0
 442 0002 0248     		ldr	r0, .L45
 443 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 444              	.LVL8:
 445 0008 08BD     		pop	{r3, pc}
 446              	.L46:
 447 000a 00BF     		.align	2
 448              	.L45:
 449 000c 00000000 		.word	htim4
 450              		.cfi_endproc
 451              	.LFE146:
 453              		.section	.text.USART1_IRQHandler,"ax",%progbits
 454              		.align	1
 455              		.global	USART1_IRQHandler
 456              		.syntax unified
 457              		.thumb
 458              		.thumb_func
 459              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccv0PdCB.s 			page 14


 461              	USART1_IRQHandler:
 462              	.LFB147:
 317:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM4_IRQn 1 */
 318:Src/stm32f4xx_it.c **** 
 319:Src/stm32f4xx_it.c ****   /* USER CODE END TIM4_IRQn 1 */
 320:Src/stm32f4xx_it.c **** }
 321:Src/stm32f4xx_it.c **** 
 322:Src/stm32f4xx_it.c **** /**
 323:Src/stm32f4xx_it.c ****   * @brief This function handles USART1 global interrupt.
 324:Src/stm32f4xx_it.c ****   */
 325:Src/stm32f4xx_it.c **** void USART1_IRQHandler(void)
 326:Src/stm32f4xx_it.c **** {
 463              		.loc 1 326 0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467 0000 08B5     		push	{r3, lr}
 468              	.LCFI9:
 469              		.cfi_def_cfa_offset 8
 470              		.cfi_offset 3, -8
 471              		.cfi_offset 14, -4
 327:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 328:Src/stm32f4xx_it.c **** 
 329:Src/stm32f4xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 330:Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 472              		.loc 1 330 0
 473 0002 0248     		ldr	r0, .L49
 474 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 475              	.LVL9:
 476 0008 08BD     		pop	{r3, pc}
 477              	.L50:
 478 000a 00BF     		.align	2
 479              	.L49:
 480 000c 00000000 		.word	huart1
 481              		.cfi_endproc
 482              	.LFE147:
 484              		.section	.text.USART2_IRQHandler,"ax",%progbits
 485              		.align	1
 486              		.global	USART2_IRQHandler
 487              		.syntax unified
 488              		.thumb
 489              		.thumb_func
 490              		.fpu fpv4-sp-d16
 492              	USART2_IRQHandler:
 493              	.LFB148:
 331:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 332:Src/stm32f4xx_it.c **** 
 333:Src/stm32f4xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 334:Src/stm32f4xx_it.c **** }
 335:Src/stm32f4xx_it.c **** 
 336:Src/stm32f4xx_it.c **** /**
 337:Src/stm32f4xx_it.c ****   * @brief This function handles USART2 global interrupt.
 338:Src/stm32f4xx_it.c ****   */
 339:Src/stm32f4xx_it.c **** void USART2_IRQHandler(void)
 340:Src/stm32f4xx_it.c **** {
 494              		.loc 1 340 0
 495              		.cfi_startproc
ARM GAS  /tmp/ccv0PdCB.s 			page 15


 496              		@ args = 0, pretend = 0, frame = 0
 497              		@ frame_needed = 0, uses_anonymous_args = 0
 498 0000 08B5     		push	{r3, lr}
 499              	.LCFI10:
 500              		.cfi_def_cfa_offset 8
 501              		.cfi_offset 3, -8
 502              		.cfi_offset 14, -4
 341:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 342:Src/stm32f4xx_it.c **** 
 343:Src/stm32f4xx_it.c ****   /* USER CODE END USART2_IRQn 0 */
 344:Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart2);
 503              		.loc 1 344 0
 504 0002 0248     		ldr	r0, .L53
 505 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 506              	.LVL10:
 507 0008 08BD     		pop	{r3, pc}
 508              	.L54:
 509 000a 00BF     		.align	2
 510              	.L53:
 511 000c 00000000 		.word	huart2
 512              		.cfi_endproc
 513              	.LFE148:
 515              		.section	.text.TIM5_IRQHandler,"ax",%progbits
 516              		.align	1
 517              		.global	TIM5_IRQHandler
 518              		.syntax unified
 519              		.thumb
 520              		.thumb_func
 521              		.fpu fpv4-sp-d16
 523              	TIM5_IRQHandler:
 524              	.LFB149:
 345:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 1 */
 346:Src/stm32f4xx_it.c **** 
 347:Src/stm32f4xx_it.c ****   /* USER CODE END USART2_IRQn 1 */
 348:Src/stm32f4xx_it.c **** }
 349:Src/stm32f4xx_it.c **** 
 350:Src/stm32f4xx_it.c **** /**
 351:Src/stm32f4xx_it.c ****   * @brief This function handles TIM5 global interrupt.
 352:Src/stm32f4xx_it.c ****   */
 353:Src/stm32f4xx_it.c **** void TIM5_IRQHandler(void)
 354:Src/stm32f4xx_it.c **** {
 525              		.loc 1 354 0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 0
 528              		@ frame_needed = 0, uses_anonymous_args = 0
 529 0000 08B5     		push	{r3, lr}
 530              	.LCFI11:
 531              		.cfi_def_cfa_offset 8
 532              		.cfi_offset 3, -8
 533              		.cfi_offset 14, -4
 355:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM5_IRQn 0 */
 356:Src/stm32f4xx_it.c **** 
 357:Src/stm32f4xx_it.c ****   /* USER CODE END TIM5_IRQn 0 */
 358:Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim5);
 534              		.loc 1 358 0
 535 0002 0248     		ldr	r0, .L57
 536 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
ARM GAS  /tmp/ccv0PdCB.s 			page 16


 537              	.LVL11:
 538 0008 08BD     		pop	{r3, pc}
 539              	.L58:
 540 000a 00BF     		.align	2
 541              	.L57:
 542 000c 00000000 		.word	htim5
 543              		.cfi_endproc
 544              	.LFE149:
 546              		.section	.text.TIM6_DAC_IRQHandler,"ax",%progbits
 547              		.align	1
 548              		.global	TIM6_DAC_IRQHandler
 549              		.syntax unified
 550              		.thumb
 551              		.thumb_func
 552              		.fpu fpv4-sp-d16
 554              	TIM6_DAC_IRQHandler:
 555              	.LFB150:
 359:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM5_IRQn 1 */
 360:Src/stm32f4xx_it.c **** 
 361:Src/stm32f4xx_it.c ****   /* USER CODE END TIM5_IRQn 1 */
 362:Src/stm32f4xx_it.c **** }
 363:Src/stm32f4xx_it.c **** 
 364:Src/stm32f4xx_it.c **** /**
 365:Src/stm32f4xx_it.c ****   * @brief This function handles TIM6 global interrupt and DAC1, DAC2 underrun error interrupts.
 366:Src/stm32f4xx_it.c ****   */
 367:Src/stm32f4xx_it.c **** void TIM6_DAC_IRQHandler(void)
 368:Src/stm32f4xx_it.c **** {
 556              		.loc 1 368 0
 557              		.cfi_startproc
 558              		@ args = 0, pretend = 0, frame = 0
 559              		@ frame_needed = 0, uses_anonymous_args = 0
 560 0000 08B5     		push	{r3, lr}
 561              	.LCFI12:
 562              		.cfi_def_cfa_offset 8
 563              		.cfi_offset 3, -8
 564              		.cfi_offset 14, -4
 369:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 0 */
 370:Src/stm32f4xx_it.c **** 
 371:Src/stm32f4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 0 */
 372:Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim6);
 565              		.loc 1 372 0
 566 0002 0248     		ldr	r0, .L61
 567 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 568              	.LVL12:
 569 0008 08BD     		pop	{r3, pc}
 570              	.L62:
 571 000a 00BF     		.align	2
 572              	.L61:
 573 000c 00000000 		.word	htim6
 574              		.cfi_endproc
 575              	.LFE150:
 577              		.section	.text.TIM7_IRQHandler,"ax",%progbits
 578              		.align	1
 579              		.global	TIM7_IRQHandler
 580              		.syntax unified
 581              		.thumb
 582              		.thumb_func
ARM GAS  /tmp/ccv0PdCB.s 			page 17


 583              		.fpu fpv4-sp-d16
 585              	TIM7_IRQHandler:
 586              	.LFB151:
 373:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 1 */
 374:Src/stm32f4xx_it.c **** 
 375:Src/stm32f4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 1 */
 376:Src/stm32f4xx_it.c **** }
 377:Src/stm32f4xx_it.c **** 
 378:Src/stm32f4xx_it.c **** /**
 379:Src/stm32f4xx_it.c ****   * @brief This function handles TIM7 global interrupt.
 380:Src/stm32f4xx_it.c ****   */
 381:Src/stm32f4xx_it.c **** void TIM7_IRQHandler(void)
 382:Src/stm32f4xx_it.c **** {
 587              		.loc 1 382 0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 0
 590              		@ frame_needed = 0, uses_anonymous_args = 0
 591 0000 08B5     		push	{r3, lr}
 592              	.LCFI13:
 593              		.cfi_def_cfa_offset 8
 594              		.cfi_offset 3, -8
 595              		.cfi_offset 14, -4
 383:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM7_IRQn 0 */
 384:Src/stm32f4xx_it.c **** 
 385:Src/stm32f4xx_it.c ****   /* USER CODE END TIM7_IRQn 0 */
 386:Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim7);
 596              		.loc 1 386 0
 597 0002 0248     		ldr	r0, .L65
 598 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 599              	.LVL13:
 600 0008 08BD     		pop	{r3, pc}
 601              	.L66:
 602 000a 00BF     		.align	2
 603              	.L65:
 604 000c 00000000 		.word	htim7
 605              		.cfi_endproc
 606              	.LFE151:
 608              		.section	.text.DMA2_Stream0_IRQHandler,"ax",%progbits
 609              		.align	1
 610              		.global	DMA2_Stream0_IRQHandler
 611              		.syntax unified
 612              		.thumb
 613              		.thumb_func
 614              		.fpu fpv4-sp-d16
 616              	DMA2_Stream0_IRQHandler:
 617              	.LFB152:
 387:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM7_IRQn 1 */
 388:Src/stm32f4xx_it.c **** 
 389:Src/stm32f4xx_it.c ****   /* USER CODE END TIM7_IRQn 1 */
 390:Src/stm32f4xx_it.c **** }
 391:Src/stm32f4xx_it.c **** 
 392:Src/stm32f4xx_it.c **** /**
 393:Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream0 global interrupt.
 394:Src/stm32f4xx_it.c ****   */
 395:Src/stm32f4xx_it.c **** void DMA2_Stream0_IRQHandler(void)
 396:Src/stm32f4xx_it.c **** {
 618              		.loc 1 396 0
ARM GAS  /tmp/ccv0PdCB.s 			page 18


 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 0
 621              		@ frame_needed = 0, uses_anonymous_args = 0
 622 0000 08B5     		push	{r3, lr}
 623              	.LCFI14:
 624              		.cfi_def_cfa_offset 8
 625              		.cfi_offset 3, -8
 626              		.cfi_offset 14, -4
 397:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */
 398:Src/stm32f4xx_it.c **** 
 399:Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 0 */
 400:Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc1);
 627              		.loc 1 400 0
 628 0002 0248     		ldr	r0, .L69
 629 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 630              	.LVL14:
 631 0008 08BD     		pop	{r3, pc}
 632              	.L70:
 633 000a 00BF     		.align	2
 634              	.L69:
 635 000c 00000000 		.word	hdma_adc1
 636              		.cfi_endproc
 637              	.LFE152:
 639              		.text
 640              	.Letext0:
 641              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 642              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 643              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 644              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 645              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 646              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 647              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 648              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 649              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 650              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 651              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 652              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 653              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccv0PdCB.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccv0PdCB.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccv0PdCB.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccv0PdCB.s:38     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccv0PdCB.s:45     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccv0PdCB.s:59     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccv0PdCB.s:66     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccv0PdCB.s:80     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccv0PdCB.s:87     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccv0PdCB.s:101    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccv0PdCB.s:108    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccv0PdCB.s:122    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccv0PdCB.s:129    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccv0PdCB.s:141    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccv0PdCB.s:148    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccv0PdCB.s:160    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccv0PdCB.s:167    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccv0PdCB.s:179    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccv0PdCB.s:186    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccv0PdCB.s:206    .text.ADC_IRQHandler:0000000000000000 $t
     /tmp/ccv0PdCB.s:213    .text.ADC_IRQHandler:0000000000000000 ADC_IRQHandler
     /tmp/ccv0PdCB.s:232    .text.ADC_IRQHandler:000000000000000c $d
     /tmp/ccv0PdCB.s:237    .text.CAN1_TX_IRQHandler:0000000000000000 $t
     /tmp/ccv0PdCB.s:244    .text.CAN1_TX_IRQHandler:0000000000000000 CAN1_TX_IRQHandler
     /tmp/ccv0PdCB.s:263    .text.CAN1_TX_IRQHandler:000000000000000c $d
     /tmp/ccv0PdCB.s:268    .text.CAN1_RX0_IRQHandler:0000000000000000 $t
     /tmp/ccv0PdCB.s:275    .text.CAN1_RX0_IRQHandler:0000000000000000 CAN1_RX0_IRQHandler
     /tmp/ccv0PdCB.s:294    .text.CAN1_RX0_IRQHandler:000000000000000c $d
     /tmp/ccv0PdCB.s:299    .text.CAN1_RX1_IRQHandler:0000000000000000 $t
     /tmp/ccv0PdCB.s:306    .text.CAN1_RX1_IRQHandler:0000000000000000 CAN1_RX1_IRQHandler
     /tmp/ccv0PdCB.s:325    .text.CAN1_RX1_IRQHandler:000000000000000c $d
     /tmp/ccv0PdCB.s:330    .text.CAN1_SCE_IRQHandler:0000000000000000 $t
     /tmp/ccv0PdCB.s:337    .text.CAN1_SCE_IRQHandler:0000000000000000 CAN1_SCE_IRQHandler
     /tmp/ccv0PdCB.s:356    .text.CAN1_SCE_IRQHandler:000000000000000c $d
     /tmp/ccv0PdCB.s:361    .text.TIM1_UP_TIM10_IRQHandler:0000000000000000 $t
     /tmp/ccv0PdCB.s:368    .text.TIM1_UP_TIM10_IRQHandler:0000000000000000 TIM1_UP_TIM10_IRQHandler
     /tmp/ccv0PdCB.s:387    .text.TIM1_UP_TIM10_IRQHandler:000000000000000c $d
     /tmp/ccv0PdCB.s:392    .text.TIM2_IRQHandler:0000000000000000 $t
     /tmp/ccv0PdCB.s:399    .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
     /tmp/ccv0PdCB.s:418    .text.TIM2_IRQHandler:000000000000000c $d
     /tmp/ccv0PdCB.s:423    .text.TIM4_IRQHandler:0000000000000000 $t
     /tmp/ccv0PdCB.s:430    .text.TIM4_IRQHandler:0000000000000000 TIM4_IRQHandler
     /tmp/ccv0PdCB.s:449    .text.TIM4_IRQHandler:000000000000000c $d
     /tmp/ccv0PdCB.s:454    .text.USART1_IRQHandler:0000000000000000 $t
     /tmp/ccv0PdCB.s:461    .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
     /tmp/ccv0PdCB.s:480    .text.USART1_IRQHandler:000000000000000c $d
     /tmp/ccv0PdCB.s:485    .text.USART2_IRQHandler:0000000000000000 $t
     /tmp/ccv0PdCB.s:492    .text.USART2_IRQHandler:0000000000000000 USART2_IRQHandler
     /tmp/ccv0PdCB.s:511    .text.USART2_IRQHandler:000000000000000c $d
     /tmp/ccv0PdCB.s:516    .text.TIM5_IRQHandler:0000000000000000 $t
     /tmp/ccv0PdCB.s:523    .text.TIM5_IRQHandler:0000000000000000 TIM5_IRQHandler
     /tmp/ccv0PdCB.s:542    .text.TIM5_IRQHandler:000000000000000c $d
     /tmp/ccv0PdCB.s:547    .text.TIM6_DAC_IRQHandler:0000000000000000 $t
     /tmp/ccv0PdCB.s:554    .text.TIM6_DAC_IRQHandler:0000000000000000 TIM6_DAC_IRQHandler
     /tmp/ccv0PdCB.s:573    .text.TIM6_DAC_IRQHandler:000000000000000c $d
     /tmp/ccv0PdCB.s:578    .text.TIM7_IRQHandler:0000000000000000 $t
ARM GAS  /tmp/ccv0PdCB.s 			page 20


     /tmp/ccv0PdCB.s:585    .text.TIM7_IRQHandler:0000000000000000 TIM7_IRQHandler
     /tmp/ccv0PdCB.s:604    .text.TIM7_IRQHandler:000000000000000c $d
     /tmp/ccv0PdCB.s:609    .text.DMA2_Stream0_IRQHandler:0000000000000000 $t
     /tmp/ccv0PdCB.s:616    .text.DMA2_Stream0_IRQHandler:0000000000000000 DMA2_Stream0_IRQHandler
     /tmp/ccv0PdCB.s:635    .text.DMA2_Stream0_IRQHandler:000000000000000c $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_ADC_IRQHandler
hadc1
HAL_CAN_IRQHandler
hcan1
HAL_TIM_IRQHandler
htim10
htim2
htim4
HAL_UART_IRQHandler
huart1
huart2
htim5
htim6
htim7
HAL_DMA_IRQHandler
hdma_adc1
